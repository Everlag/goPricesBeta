// Code generated by go-bindata.
// sources:
// sql/addPriceMKMprice.sql
// sql/addPriceMTGprice.sql
// sql/bulkExtrema.sql
// sql/bulkLatest.sql
// sql/historicalPriceMKMprice.sql
// sql/historicalPriceMTGprice.sql
// sql/medianMKM.sql
// sql/medianMtgprice.sql
// sql/mkmPriceClosest.sql
// sql/mkmPriceLastest.sql
// sql/mkmPriceLatestHighest.sql
// sql/mkmPriceLatestLowest.sql
// sql/mkmPriceSetLatest.sql
// sql/mkmPriceWeeksHigh.sql
// sql/mkmPriceWeeksLow.sql
// sql/mtgPriceClosest.sql
// sql/mtgPriceLatest.sql
// sql/mtgPriceLatestHighest.sql
// sql/mtgPriceLatestLowest.sql
// sql/mtgPriceSetLatest.sql
// sql/mtgPriceWeeksHigh.sql
// sql/mtgPriceWeeksLow.sql
// DO NOT EDIT!

package priceDB

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _sqlAddpricemkmpriceSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8d\x31\xae\xc2\x30\x0c\x86\xf7\x48\xb9\x83\x87\x0e\xaf\x55\xf4\xaa\xf7\x80\x03\x30\x30\x74\x29\x12\xf4\x02\x56\xe2\x16\x0b\x9a\x54\x89\x0b\xd7\x27\xa1\x33\xc3\x67\x59\xbf\x3f\xeb\x6f\x1b\xad\xb4\x3a\x3a\x97\x00\xc1\xd3\x0b\x96\xc8\x96\x60\x09\xec\x05\xc6\x10\x73\x9a\x16\xb2\x3c\xb2\x05\x8b\xd1\x01\x7a\x57\x1c\x2f\xec\x27\x08\x23\xc8\x0d\x45\xab\xcf\x49\xc2\xf6\x9d\x7e\x67\x9c\xd8\x96\x6c\xc6\x78\x27\x29\x15\x4d\x5b\x66\xd7\x5f\x4f\x97\x01\xba\x7e\x38\x7f\x75\x7f\x3c\xce\x64\x20\x91\x18\x10\x2e\x2b\xad\x31\x98\xcd\xaf\xb5\x7a\xe2\x63\xa5\x94\xbd\xea\xcf\x40\xf5\x9f\xd9\x65\xf6\x99\x43\xfd\x0e\x00\x00\xff\xff\x98\xb7\x68\x2b\xcf\x00\x00\x00")

func sqlAddpricemkmpriceSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlAddpricemkmpriceSql,
		"sql/addPriceMKMprice.sql",
	)
}

func sqlAddpricemkmpriceSql() (*asset, error) {
	bytes, err := sqlAddpricemkmpriceSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/addPriceMKMprice.sql", size: 207, mode: os.FileMode(438), modTime: time.Unix(1435096674, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlAddpricemtgpriceSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8c\xbd\xae\xc2\x30\x0c\x85\xf7\x48\x79\x87\x33\x74\xb8\xad\xaa\x5b\xf1\xf3\x02\x0c\x0c\x5d\x8a\x04\x7d\x81\x28\x49\x8b\x25\xea\x54\x8d\x81\xd7\x27\x09\x23\xc3\xb1\x8e\xfc\x7d\x76\xd7\x68\xa5\xd5\xc9\xb9\x08\x03\xf6\x6f\xac\x1b\x59\x8f\x35\x10\x0b\xa6\xb0\xa5\x6d\x5c\xbd\xa5\x89\x2c\xac\xd9\x1c\x0c\xbb\xec\xb0\x10\xcf\x08\x13\xe4\x6e\x44\xab\x82\x24\x7c\xaf\xe3\xff\x22\x73\x69\xf9\x77\xd3\xe5\xd9\x0f\xb7\xf3\x75\x44\x3f\x8c\x97\x5f\xe9\x8f\xcd\xe2\x5b\x44\x2f\x2d\x84\x72\x2d\xa0\xd6\xea\x65\x1e\x4f\x1f\x93\x51\xed\x5a\x54\xfb\x94\x43\xca\xb1\xfe\x04\x00\x00\xff\xff\x19\xc4\x61\xec\xb7\x00\x00\x00")

func sqlAddpricemtgpriceSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlAddpricemtgpriceSql,
		"sql/addPriceMTGprice.sql",
	)
}

func sqlAddpricemtgpriceSql() (*asset, error) {
	bytes, err := sqlAddpricemtgpriceSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/addPriceMTGprice.sql", size: 183, mode: os.FileMode(438), modTime: time.Unix(1435096704, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlBulkextremaSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x53\xc1\x6e\x1b\x39\x0c\x3d\xef\x00\xf3\x0f\x3c\x04\x70\x13\x38\x5b\xd8\xce\xa9\x45\x0f\xdd\x34\xed\xee\x21\x8b\x20\x36\xda\x43\x90\x03\xad\xe1\xcc\x08\xd6\x48\xb3\x94\x54\xaf\xff\x7e\x29\x8e\xe3\x18\xc5\xe6\x60\x41\xa2\x39\x7c\x8f\xef\x91\xef\xaf\xea\xea\x91\x52\x66\x1f\x21\xf5\x04\x7b\xa2\x9d\x3b\xc0\x40\x8d\x45\x0f\xa1\x05\xfa\x37\x31\x0d\x04\x23\x5b\x43\x11\x62\x1e\xe4\x3f\x68\x03\x03\x82\x09\xce\x91\x49\x36\x68\xa6\x41\x6e\xe2\xef\x75\x55\x57\x9b\xde\x46\xf8\x27\x13\x1f\x40\x2e\x0d\x45\xdb\xf9\xe3\x47\x39\x0a\x86\x4d\x3d\xc4\x84\x49\xea\xfa\x14\x25\xee\x5c\xd8\x5b\xdf\x9d\x31\xb8\x9e\x70\xb1\xae\x46\x4c\x89\x58\x11\x58\x89\xc2\x4f\x74\x99\x8e\x48\xb8\xa3\x58\x57\xbf\x5d\x2c\xe0\x5a\x28\xd2\x88\x2c\x40\xa7\xda\x60\x1b\x39\x6d\x6b\x89\x4b\xd2\x52\x92\x90\x19\x0f\x2f\x74\xc1\xe3\x20\x4d\xa5\x00\x2d\x25\xd3\x97\x9c\xd5\x79\x8e\xf5\x89\x3a\x62\xcd\x18\xb2\x4b\x76\x14\x6d\x0a\x49\x13\x98\x29\x8e\xc1\x37\x85\x76\x29\x35\x8b\x93\x44\xb0\x3d\x14\x62\xb7\xc1\xc7\xc4\x28\x05\xa4\xa8\x23\xff\xee\x62\x79\x09\x9f\x3e\x81\x5e\x57\x97\x20\x52\xa4\x5e\xbe\x8d\x85\x2c\x27\xd8\x32\xe1\x4e\xde\x47\xfd\x08\x5a\x34\x49\x52\x30\x89\x20\x2f\x9d\x01\x3a\x77\x2e\xdc\x96\x44\xd2\xa2\x98\xca\x8a\xe0\x69\x2f\xcc\xbc\x9f\x3c\xa9\xab\x81\x50\x6d\x3d\xb9\x61\xc4\xd3\x2d\x41\xc4\x96\xa4\x11\xce\x7e\x0e\xe8\x0f\x4a\x64\xc2\xb2\x5e\xc4\xb5\x8d\x20\xc4\x29\x80\x51\x1c\x1f\xa7\x72\x7b\x2b\xf0\x4a\xf4\xac\xa6\x12\xfe\x93\x98\x44\x00\x84\xd2\xb3\xef\x04\xc1\xe0\x48\xb1\xb7\xad\x74\x96\xad\x6b\x26\xcf\x8b\x72\xaf\x05\x8f\x00\x6a\x78\x94\x01\xa8\xab\x57\xdf\x7a\x2c\xdd\x91\x3f\x79\xaa\x30\x91\xca\xb8\xc1\x15\xb4\x1c\x86\xe3\x28\xfe\xd0\x71\xb9\x9b\xa6\xe5\xdd\x4c\xa7\x27\xec\x67\xf3\xba\x52\x17\x9f\x66\x7f\x30\x91\xba\xf4\x10\x82\x9b\xcd\x61\x76\xcb\x07\xc1\x37\x70\x1b\x86\x01\x7d\x53\x42\x5f\x91\xa3\x7c\xa8\x57\x17\x42\x23\x33\xf4\x8d\xc3\x4f\xd2\x80\x48\x1c\x53\xb9\xfd\x15\xdd\x31\xff\x3e\x64\x9f\xc4\xdc\x72\x7f\x20\x62\xd8\xf4\x1c\x72\xd7\xc3\x17\x1a\x53\x1f\x35\x7c\xe0\x60\x1c\xc6\xa1\x3c\x1e\xe9\x05\xe9\x91\x46\x42\xa5\xb1\xc6\x5d\x66\xbc\xde\xb0\x15\x47\xee\x5c\x43\xac\xd1\x93\x70\xfa\x22\x64\xd3\xeb\xe2\x6c\xc2\x20\x33\x57\x3a\x2b\x61\xce\x03\x7c\xb7\x51\x54\x54\xb0\xb5\xc7\xd1\x60\x94\x3d\x81\x7b\xec\x94\xf6\x3a\x11\x4a\x4e\x99\x93\xe9\x19\x86\xb1\xa8\x20\x7d\xe5\x89\xca\x77\x74\x42\x21\xcd\xd5\x96\xfb\xe0\x92\xc8\xfd\x60\xbd\x47\xe3\xb4\xc2\x67\x6f\x6c\xf1\xe2\x1b\xe7\x66\xaa\xf9\xd5\xea\xd0\x67\xe5\xf6\x37\x75\xe2\x96\xf6\x94\x1b\x82\xcf\x7b\x59\x45\x2f\x08\x8a\xd6\x63\x13\xf6\x65\x83\xbe\x84\xbc\x9d\x5a\xc9\x8d\xec\x22\xac\xfb\x60\x54\xe7\x1f\x99\x07\x13\xac\x83\x3b\xdf\x59\x4f\xb3\xe7\x0f\x1f\x92\xec\xfc\xd3\xf3\xab\x73\x8b\x92\xb7\x2a\xc7\xb2\x1c\xfa\xbc\x39\xc5\x7e\x39\x6e\x4e\x79\x37\xff\x73\xac\xde\x8a\x2d\x4f\xb7\xc5\xaf\x4f\x61\x24\xeb\xfb\xf4\x5c\x57\x97\x1f\xcb\xf4\x5d\xbd\x3f\x9b\xc1\x32\x67\xf3\xe3\xc6\xbf\x39\x8d\x17\x8b\x39\x5c\x2c\xe5\xb7\xba\xfc\xf8\x5f\x00\x00\x00\xff\xff\xad\x27\x1a\x25\x69\x05\x00\x00")

func sqlBulkextremaSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlBulkextremaSql,
		"sql/bulkExtrema.sql",
	)
}

func sqlBulkextremaSql() (*asset, error) {
	bytes, err := sqlBulkextremaSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/bulkExtrema.sql", size: 1385, mode: os.FileMode(438), modTime: time.Unix(1452480106, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlBulklatestSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x53\x4d\x4f\xe4\x48\x0c\x3d\x6f\xa4\xfc\x07\x1f\x90\xb2\xa0\xb0\x08\x8e\x70\x5a\x9a\x85\xd5\x4c\x8f\x18\x01\x62\x0e\x88\x83\x3b\x71\x92\x52\xd7\x47\xc6\x55\xe9\xd0\xf3\xeb\xc7\xae\x80\xe0\xc0\x5c\x5a\x91\xcb\x7e\xef\xf9\x3d\xf7\xc9\x51\x59\xdc\x51\x9a\xd8\x47\x40\x48\x03\x01\x53\x9c\x6c\x82\xd0\xc1\xcf\x89\x78\x6f\x7c\x2f\x0f\x23\xd3\x88\x4c\x2d\xc4\x84\x89\x1c\xf9\x04\x5d\x60\x20\x6c\x06\x68\x90\xdb\xb2\x18\x39\xec\x4c\x4b\xed\x3f\x65\x51\x16\x0f\x83\x89\xcb\x38\xc8\x47\x4b\xd1\xf4\x5e\x86\x75\x64\x8a\x04\xb3\x49\xc3\x3b\x52\x94\xba\xb5\x61\x56\x26\x15\x60\xa5\x1e\xd3\x31\xbd\x24\x26\x87\x82\x8c\x29\x11\x7b\x55\xc4\x59\x29\xec\xd0\x4e\x14\x17\x26\xdc\x52\x2c\x8b\xbf\x0e\x4e\xe1\xf8\x33\x95\x22\xc9\x27\xd3\x19\x62\x6d\x3a\x93\x26\x64\xc6\xbd\x82\xa9\x6e\xf0\xe8\x28\x42\x0a\xd0\x51\x6a\x86\x45\x3b\x41\x87\x4d\x12\x2d\x98\x60\xa6\x37\x54\x40\x6b\x3f\x8a\xde\x90\xac\x43\xda\xa0\x2b\x21\x78\x9a\xa1\x09\xde\x53\x93\x4c\xf0\x65\xe1\x08\xc5\xd3\xf4\xee\x44\x83\x5e\x86\x20\x62\x47\x76\x0f\x3c\xf9\x1a\xd0\xef\xa5\x21\xef\x2d\x5c\xc6\xcb\x62\xa6\xd5\xf5\x97\x02\xc6\x38\xb9\x71\x81\x9b\x8d\xd0\x6f\x98\x70\xfb\x01\x33\x5b\xf0\x3f\x31\x55\x9a\x5e\x9c\x36\x91\x72\x72\x5f\x26\xbf\xb8\x8d\x22\x0e\x7b\x02\x7a\x41\x37\x5a\xaa\x17\xeb\x5d\xea\xbf\xb3\x69\x68\x9d\x9d\x5e\x87\x59\x7e\xcb\x22\xb3\x89\x79\x62\xc6\x86\xde\xbd\x54\x18\x8d\x25\x52\x8c\xa2\x24\x53\x46\xb2\xb2\x66\x36\xaf\x96\x87\x54\x83\xf4\x0b\x20\x74\x1c\x9c\x4e\xfc\x27\x87\xb1\xa0\xff\x5d\x7d\xc6\x56\xd5\x12\x47\x4e\xe2\xa9\x5a\x9b\x7e\x48\x5e\x5d\xb8\x0c\x56\x5e\xa0\xba\xdd\x11\xf7\x1c\x66\x0f\x0f\xc1\x6d\xb4\x72\x9f\x82\x1b\xb5\xe5\x86\x83\xec\xa6\xa5\x6b\x71\xff\x15\xa8\xba\x9f\x65\x3d\x29\x42\xf5\x23\x04\x39\x42\xb8\x0e\x41\x5c\xb2\x36\x6a\xe7\xa5\x95\xa2\x24\x67\xf4\x06\xbf\x19\x71\x2b\x17\xb1\xd9\x36\x96\x70\x47\xb0\xb2\xa6\xeb\xe2\x02\x75\x87\xbd\xf2\xdc\xe1\x4e\xda\xb5\xf1\x91\xb8\x45\xb9\xa4\x15\x26\x6c\x44\x4e\x86\xfc\x6a\xe4\x5a\xc8\xc3\xb5\xf1\xdb\xd7\xc1\x07\x94\x2b\x9f\xb8\xce\x66\xdd\x04\xdb\xea\x33\xfa\x3e\xcb\x6f\x84\xc6\x67\xe0\xdb\xf0\x2b\xc3\x5e\x21\x6f\x61\x15\x7c\x67\x14\xfd\x0d\x82\x5d\xe8\xc3\xbe\xd3\x86\xb5\xb1\x06\x3d\x6a\x9c\x8a\xf8\x48\xc6\x66\xe6\x60\xb1\x1f\xd0\x57\x12\xf9\x2a\x38\x87\xea\x86\x0e\xff\xbb\xe1\x69\x4c\x70\x45\x0d\xee\xab\xe7\xf3\xf3\x24\x7f\xa0\xa7\xe7\xc3\x0b\xcd\xeb\xe8\xe4\xf3\xd4\x92\xd1\xcf\x3f\x46\x77\x70\x5a\xc3\xc1\xd9\xe1\xc5\xef\x00\x00\x00\xff\xff\x8b\x78\x21\x0b\x25\x04\x00\x00")

func sqlBulklatestSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlBulklatestSql,
		"sql/bulkLatest.sql",
	)
}

func sqlBulklatestSql() (*asset, error) {
	bytes, err := sqlBulklatestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/bulkLatest.sql", size: 1061, mode: os.FileMode(438), modTime: time.Unix(1452150166, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlHistoricalpricemkmpriceSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xce\x31\x4f\xc3\x30\x10\x05\xe0\xdd\x92\xff\xc3\x1b\x3a\x40\x15\xb5\xd0\x81\x05\x75\x40\x10\xc4\x50\x40\x0a\x48\xcc\xc6\xb9\x14\x8b\xd8\x8e\xee\xae\x03\x0b\xbf\x9d\x5c\xe8\x76\x6f\xf8\xde\xbd\xed\xda\xbb\x8e\xf4\xc4\x45\x10\xc6\x11\x13\xa7\x48\x82\xa1\x32\x82\x85\xa2\xa9\x1c\x51\x87\x39\xc9\x44\x31\x0d\x29\x22\x06\xee\x37\xde\x79\x77\x48\x39\xa9\x40\x2b\x6e\xae\xfe\x25\xa6\x3a\x13\xb9\xf8\xdd\x21\xd7\xa2\x5f\x72\x69\xb6\x0f\x1a\xbc\x5b\x6f\xcd\xbc\xb5\x87\xf6\xfe\x1d\x25\x64\x6a\x20\xa4\x0d\x34\xd9\xb9\xf0\x06\x74\xe2\x8a\xc7\xee\xf5\xf9\xbc\x64\x93\xc3\x31\x45\xfb\x98\x03\x7f\x93\xe2\xe3\xa9\xed\x5a\xef\xcc\xef\x57\xd7\xb8\x7b\x79\xb0\x96\xfd\x6a\x87\xca\x3d\x31\x3e\x7f\x96\x42\xf4\x24\x11\xa3\x0d\x9c\xc7\xdd\xfe\x05\x00\x00\xff\xff\xb8\xd0\xf1\xa0\xe7\x00\x00\x00")

func sqlHistoricalpricemkmpriceSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlHistoricalpricemkmpriceSql,
		"sql/historicalPriceMKMprice.sql",
	)
}

func sqlHistoricalpricemkmpriceSql() (*asset, error) {
	bytes, err := sqlHistoricalpricemkmpriceSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/historicalPriceMKMprice.sql", size: 231, mode: os.FileMode(438), modTime: time.Unix(1447439222, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlHistoricalpricemtgpriceSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xce\x31\x4b\xc4\x30\x18\xc6\xf1\x3d\x90\xef\xf0\x0c\x1d\xb4\x14\xab\x1d\x5c\xa4\x83\x68\xc4\xa1\x2a\x54\xc1\x39\x26\x69\x0d\x34\x49\xc9\xfb\xde\x70\xcb\x7d\xf6\x6b\xae\xb7\xe5\x09\xfc\x5e\xfe\x6d\x2d\xc5\xe8\xf8\x90\x23\x41\x2f\x0b\xd6\xec\x8d\x23\x4c\x29\x43\x97\x11\xd9\xc7\x19\x69\xda\x16\xad\xce\xf8\xc9\x1b\x18\x9d\xad\x14\x52\x0c\x3e\x78\x26\x70\xc2\xe3\xfd\x0e\xb1\xa6\x4d\xd0\xcd\xa9\x43\x48\x91\xff\xe9\xb6\x50\xab\x59\x4b\x51\xb7\xc5\x7c\xab\x41\xbd\xfc\x20\xea\xe0\x1a\x90\xe3\x06\xec\xcb\x73\xe7\x6f\xe3\xd7\xc7\x35\xe1\x2e\xf0\xbc\x7f\xfe\xbe\xab\x51\x49\x51\x48\x5f\x3d\xe0\xf9\xf3\xb5\xc0\xbe\xea\x90\xb2\x75\x19\x7f\xc7\xcb\x0d\x58\x47\x06\x4b\x69\xda\x7a\x9e\xce\x01\x00\x00\xff\xff\xd1\xdb\x32\xd1\xd9\x00\x00\x00")

func sqlHistoricalpricemtgpriceSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlHistoricalpricemtgpriceSql,
		"sql/historicalPriceMTGprice.sql",
	)
}

func sqlHistoricalpricemtgpriceSql() (*asset, error) {
	bytes, err := sqlHistoricalpricemtgpriceSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/historicalPriceMTGprice.sql", size: 217, mode: os.FileMode(438), modTime: time.Unix(1447439227, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMedianmkmSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\xcd\x4d\x6a\xc3\x30\x10\xc5\xf1\xbd\x40\x77\x78\x8b\x40\x3e\x08\x0d\xed\xb6\xe4\x12\xbd\x40\x99\x48\x2f\x8a\xb0\x25\x99\xd1\x18\xe3\xdb\xb7\x2e\xed\xb2\xd9\xcd\x62\xde\xff\x77\x39\x79\xf7\x41\x9b\xb5\x76\xd8\x83\x58\xc8\x61\x5c\x21\x29\x29\x93\x18\x51\x18\xb3\x54\xdc\x9b\x42\x50\xa5\x10\x52\x23\x3a\x0d\xa1\x95\x5b\xae\x62\xb9\x55\xef\x4e\x17\xef\x3a\x47\x06\x43\xfc\x9e\x7d\x9a\xce\x35\x1c\xf6\x5b\x6e\x7f\x86\xe5\xc2\xe3\xf9\xb7\x75\x98\x34\x07\x1e\x71\xd7\x56\xf0\x73\xf7\x97\x22\x29\x87\x20\x1a\x8b\xe8\x40\xf3\x6e\x79\x50\xe9\xdd\x06\x5e\x77\xaf\x7f\xe6\x75\xf7\xe6\x5d\xd2\x36\x4f\xb8\xad\xff\x42\x68\x1a\xa9\x4f\x3f\x22\x7b\x78\xff\x0a\x00\x00\xff\xff\x8f\xd1\x34\x14\xfc\x00\x00\x00")

func sqlMedianmkmSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMedianmkmSql,
		"sql/medianMKM.sql",
	)
}

func sqlMedianmkmSql() (*asset, error) {
	bytes, err := sqlMedianmkmSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/medianMKM.sql", size: 252, mode: os.FileMode(438), modTime: time.Unix(1435187634, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMedianmtgpriceSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x8d\x4b\x6a\xc4\x30\x10\x44\xf7\x02\xdd\xa1\x16\x03\xf3\x61\xc8\x90\x6c\xc3\x5c\x22\x17\x08\xb2\x54\x96\x45\x2c\xc9\xb4\xda\x18\xdf\x3e\xb6\x49\x96\xc9\xaa\xdf\xa2\xeb\xbd\xc7\xcd\x9a\x0f\xea\x2c\xa5\x41\x07\x62\x21\xbf\xc6\x15\x2e\x46\x61\x74\x4a\x64\x86\xe4\x0a\xfa\x2a\x70\x28\x2e\x13\xae\x04\x34\x2a\x7c\xcd\x5d\x2a\x4e\x53\x2d\xd6\xdc\x1e\xd6\x34\x8e\xf4\x8a\xb0\xcd\x3e\x55\xe6\xe2\x2f\xe7\x5d\x77\xbe\x43\x53\xe6\xf5\xfe\xe3\xba\x4c\x92\x3c\xaf\xe8\xa5\x66\x1c\xdc\x5e\xb2\xc6\x83\xac\x59\x06\xca\x76\xf6\xd2\xf3\xf4\xfa\x1b\x7b\x9e\xde\xac\x89\x52\xe7\x09\xdd\xfa\x67\x01\x55\x02\xe5\xdf\x8f\xc0\xe6\xdf\xbf\x03\x00\x00\xff\xff\xd0\xe4\x77\x65\xf5\x00\x00\x00")

func sqlMedianmtgpriceSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMedianmtgpriceSql,
		"sql/medianMtgprice.sql",
	)
}

func sqlMedianmtgpriceSql() (*asset, error) {
	bytes, err := sqlMedianmtgpriceSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/medianMtgprice.sql", size: 245, mode: os.FileMode(438), modTime: time.Unix(1435187618, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMkmpriceclosestSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x90\x3f\x8f\xda\x40\x10\xc5\x7b\x4b\xfe\x0e\x53\x50\x00\x72\x40\x24\x65\x44\x24\xfa\x54\x09\x52\x94\x72\xbc\x3b\xb6\x47\xb7\x7f\x60\x77\x6c\x8e\x6f\x7f\xe3\xdd\xa3\xb8\x0a\x3c\x6f\xf6\xf7\xde\xbc\xe3\xbe\x6d\xfe\x90\xcc\x29\x64\x90\x89\xe0\x96\xd8\x10\x0c\x31\x01\xc2\xc8\x0b\x05\x30\x98\xec\x31\x93\x80\x89\xbe\xe7\x80\xc2\x31\xb4\xcd\x83\x65\x02\x61\x4f\x60\x5c\xcc\x94\x05\x24\x7e\x02\xe2\xc2\x96\x6c\x11\x0f\x6d\xd3\x36\x57\x9d\xa2\xb9\xcf\x9c\x74\x5a\xf9\x0f\x76\x0e\x2e\xbf\xff\x5d\xfe\xff\x85\x5e\xd5\x41\x28\xc1\xea\x29\x85\x51\xb8\x2f\xd0\x01\xae\x93\xce\x3d\xa1\x46\x44\xb8\xcf\x94\x9e\xfa\x48\x23\x52\x59\xce\x82\x49\x20\x0e\x60\x51\xb0\x92\x53\x39\x08\x42\x94\x89\xc3\xb8\x02\x38\x03\xd7\x03\x7b\x9a\x70\xe1\x38\x27\x78\x10\x58\xca\x9a\x0a\xb0\x4a\xe8\x34\xc6\x7a\xe0\xa2\x09\xe3\xec\x6c\x31\x55\x35\xf3\x18\x14\xa4\xee\x59\x7f\xdc\x97\x96\xd4\x4e\x8d\x29\x97\xaf\x12\xa1\x06\xaa\x15\xbe\xca\xd3\x22\xf6\xc7\xb5\x8c\x4c\x8e\x8c\x40\x40\x4f\x1d\xa8\xd0\x95\x63\xbb\x4a\xec\x80\xe6\x14\x61\x48\xd1\xd7\x41\x3e\x78\x1c\xd9\xac\x14\x8f\xe9\x8d\x44\x8b\x9f\x48\x13\xaf\xef\xcf\x9b\x13\x60\xb0\x2b\xe5\xbc\xf9\x5e\xfe\x6e\x7e\xc0\xaf\x02\x6c\x9b\x98\xac\x76\xda\x3f\xdb\x06\xfb\xbc\xa5\x77\x49\x68\x64\x4b\xb7\x68\xa6\x6a\xa0\xbb\xdf\xca\xee\x6e\xd7\x36\x8e\x3d\x0b\x9c\x7e\x7e\x04\x00\x00\xff\xff\xad\xd4\xae\x78\x0f\x02\x00\x00")

func sqlMkmpriceclosestSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMkmpriceclosestSql,
		"sql/mkmPriceClosest.sql",
	)
}

func sqlMkmpriceclosestSql() (*asset, error) {
	bytes, err := sqlMkmpriceclosestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mkmPriceClosest.sql", size: 527, mode: os.FileMode(438), modTime: time.Unix(1435432028, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMkmpricelastestSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x24\x8c\xc1\x6a\x84\x30\x18\x84\xef\x81\xbc\xc3\x1c\x3c\x89\x28\xf6\x5a\x3c\xb4\x9a\x52\x41\x2b\x44\xa1\xf4\x98\xc6\xb4\x0d\xdd\x24\x92\xfc\xbe\xff\xaa\x7b\x9a\x8f\x61\xe6\xab\x72\xce\xa4\xa1\x3d\xfa\x04\xfa\x33\xb8\x29\x32\x89\xb0\x6f\xeb\x01\xf8\x09\x11\x0a\x5a\xc5\xb5\x4a\x86\xa0\x83\xfb\xb6\x5e\x91\x0d\xbe\xe4\x2c\xaf\x38\xe3\x6c\x16\x83\x68\x17\x78\xe5\x4c\x81\x63\x54\x80\xec\x89\x5b\xb4\xfa\x08\xb3\xc7\x80\x37\x39\x8d\x8f\x22\x95\x4e\xfd\x5a\x7d\x1a\x9d\x8a\xff\x86\x38\xfb\x7c\x17\x52\x5c\xff\x26\xab\xf1\xf2\xd1\x9d\x96\x26\x7b\xe2\x6c\x92\x9d\x90\x78\xfd\xba\x8c\xe8\xc4\xdc\x62\xe8\xc7\x7e\x41\xfd\x7c\x0f\x00\x00\xff\xff\x0f\xed\x56\xa9\xb7\x00\x00\x00")

func sqlMkmpricelastestSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMkmpricelastestSql,
		"sql/mkmPriceLastest.sql",
	)
}

func sqlMkmpricelastestSql() (*asset, error) {
	bytes, err := sqlMkmpricelastestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mkmPriceLastest.sql", size: 183, mode: os.FileMode(438), modTime: time.Unix(1435116688, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMkmpricelatesthighestSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x4d\x6f\x82\x40\x10\x86\xcf\x6c\xb2\xff\xe1\x3d\x34\x11\x0c\xad\xf5\x6a\x3f\x2e\xad\x69\x4c\x1a\x7b\xd0\xbb\xd9\xc2\x08\x1b\x59\x96\xec\x6e\x25\xfe\xfb\xce\x8a\x34\x7a\xe9\x09\x18\x9e\x77\xe6\x99\x99\x4d\xa5\xf8\xa0\x80\x50\x13\x6a\x5d\xd5\xe4\x43\x8e\xce\x7a\x1d\xf4\x91\xd0\x39\x5d\x10\xec\x1e\x0a\x85\x72\x25\x54\xe1\xac\xf7\x50\x4d\x13\x8b\x3a\xf8\x48\xb4\x41\xb7\x95\x9f\x78\x29\x1a\x15\x38\x3f\xa4\xfc\x83\x14\xd3\x99\x14\x52\xf4\x3a\xd4\x60\xe6\xb4\xeb\x75\x5b\xda\x1e\xca\x23\x95\x22\xf1\xd4\x50\x11\x30\xc5\xde\x59\x33\x86\x8c\xaa\x74\x11\x67\x19\xe5\x0e\x14\x18\xeb\x6b\x72\xc4\xcf\xa4\x55\x86\x5e\xee\xe6\x50\x6d\x79\xfe\xb4\x7d\x9a\xe1\x9e\x3b\x1b\xc2\x33\x26\x73\xf4\x44\x87\xc9\x62\xc1\x42\xe4\x8e\xaa\x19\xc1\x61\x89\x57\x3c\x4a\x91\xe5\x52\xb0\xfc\xce\x13\xab\xdf\x6a\x70\x69\x10\xb9\x36\x3d\xcf\xc6\x38\xb8\x72\xf6\xa7\xc3\xf7\x29\xb2\xdc\x4b\x8a\x4b\x34\xfe\xcf\x63\x31\x3f\xcb\xe4\x97\xb3\xc5\x6e\x69\x3c\x40\xb2\x59\x7e\x2e\xdf\xb6\x78\x5f\x6d\xb6\xab\x35\xbf\x7c\xad\x53\xa6\xb3\xff\x82\xd7\x1a\xd7\x47\x88\x9a\xba\x45\x7a\x7b\xbc\x71\x27\x76\x4a\xac\x2b\xc9\x5d\x2c\x87\xbe\x28\xc9\x17\x51\x24\x8b\x3b\x07\x32\x1d\xfe\xa0\x61\x62\x04\xd0\x68\xa3\x03\xe6\x4f\xbf\x01\x00\x00\xff\xff\xbb\x3b\xa7\x73\x13\x02\x00\x00")

func sqlMkmpricelatesthighestSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMkmpricelatesthighestSql,
		"sql/mkmPriceLatestHighest.sql",
	)
}

func sqlMkmpricelatesthighestSql() (*asset, error) {
	bytes, err := sqlMkmpricelatesthighestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mkmPriceLatestHighest.sql", size: 531, mode: os.FileMode(438), modTime: time.Unix(1451966850, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMkmpricelatestlowestSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x3f\x6f\xc2\x30\x14\xc4\xe7\x58\xf2\x77\xb8\xa1\x12\x09\x4a\x4b\x59\xe9\x9f\xa5\x45\x15\x52\x45\x07\xd8\x91\xeb\x3c\xc0\xc2\x8e\x23\xdb\xc5\xe2\xdb\xd7\x26\xa4\x82\xa5\x53\x92\x97\xbb\x77\xbf\x77\x93\x31\x67\x1f\x14\x10\xf6\x04\x6d\x23\xf9\x50\xa3\xb3\x5e\x05\x75\x24\x74\x4e\x49\x82\xdd\x42\x40\x0a\xd7\x40\x48\x67\xbd\x87\xd0\x3a\x0f\x55\xf0\x59\xd1\x06\xd5\xee\xfc\xc8\x73\xa6\x45\x48\xfe\xde\xe5\x1f\x38\x1b\x4f\x38\xe3\x2c\xaa\xb0\x47\xd2\x9c\x36\x51\xb5\x8d\x8d\x10\x1e\x25\x67\x85\x27\x4d\x32\x60\x8c\xad\xb3\x66\x30\x19\xb1\x53\x32\x67\x19\xe1\x0e\x14\x92\x2c\xee\xc9\x51\x7a\x16\xad\x30\xf4\x72\x37\x85\x68\x9b\xf3\xa7\x8d\x65\x85\xfb\xb4\xd9\x10\x9e\x31\x9a\x22\x12\x1d\x46\xb3\x59\x02\x22\x77\x14\x7a\x10\xf6\x47\xbc\xe2\x91\xb3\xaa\xe6\x2c\xc1\x6f\x3c\x25\xf4\x5b\x8c\x34\xea\x41\xae\x49\xcf\xd9\x18\x82\x77\xce\xfe\x74\xf8\x3e\x65\x6d\xda\xc5\xd9\xc5\x9a\xff\xd7\x79\x58\x9f\x61\xea\x4b\x6d\x79\x5b\x99\x0b\x28\x56\xf3\xcf\xf9\xdb\x1a\xef\x8b\xd5\x7a\xb1\x4c\x2f\x5f\xcb\x32\xa9\xab\xff\x8c\xd7\x18\xd7\x25\x64\x4c\xd5\xa2\xbc\x2d\x6f\xb8\x29\x31\x15\xd6\x35\xe4\x2e\x94\xfd\x5e\x34\xe4\x65\x06\xa9\xf2\xcd\x81\x4c\x87\x3f\x51\x9f\x28\xbc\x84\x56\x46\x05\x4c\x9f\x7e\x03\x00\x00\xff\xff\x8f\x9d\x67\x9b\x11\x02\x00\x00")

func sqlMkmpricelatestlowestSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMkmpricelatestlowestSql,
		"sql/mkmPriceLatestLowest.sql",
	)
}

func sqlMkmpricelatestlowestSql() (*asset, error) {
	bytes, err := sqlMkmpricelatestlowestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mkmPriceLatestLowest.sql", size: 529, mode: os.FileMode(438), modTime: time.Unix(1452305490, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMkmpricesetlatestSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\xcf\x41\x4e\x86\x30\x10\xc5\xf1\x7d\x93\xde\xe1\x2d\x5c\x7c\xb0\x80\x70\x00\x2e\xe1\x0d\x6a\xfb\x90\x89\xb4\x35\xd3\x11\xc3\xed\xb5\x62\xe2\xd6\xed\xfc\xf3\x7b\xc9\xcc\xa3\x77\xcf\xb4\x0f\x2d\x0d\xb6\x13\x47\x30\x36\xc3\xbb\x4a\x24\xb6\xaa\xe0\x49\xbd\x10\x83\x26\x48\x41\xf8\x2e\xf5\x94\xc4\x84\x46\x9b\xbc\x1b\x67\xef\xbc\x6b\x3c\x18\x0d\x23\x36\xad\xf9\xc6\x6d\xca\xe1\x55\x62\x87\x39\xe8\x1b\x0d\x9f\x3b\x95\x9d\xad\x4f\x0b\x42\x49\x30\xc9\x5c\x1f\xbf\x36\x49\x33\x29\xd1\x1e\xfd\x3a\xfc\x7f\xa8\x6a\xa2\xe2\xe5\xfa\x59\x43\x62\x8b\x38\x24\x8b\x61\x19\xfe\xda\xfd\x4e\x8f\x5f\x01\x00\x00\xff\xff\xc9\x8c\xbc\xcb\xf0\x00\x00\x00")

func sqlMkmpricesetlatestSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMkmpricesetlatestSql,
		"sql/mkmPriceSetLatest.sql",
	)
}

func sqlMkmpricesetlatestSql() (*asset, error) {
	bytes, err := sqlMkmpricesetlatestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mkmPriceSetLatest.sql", size: 240, mode: os.FileMode(438), modTime: time.Unix(1441343196, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMkmpriceweekshighSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\xc1\x6e\xc2\x30\x0c\x86\xcf\x44\xca\x3b\xf8\x30\x89\x82\x2a\xd8\xce\xd3\x76\xdd\x63\x20\x2f\x31\x10\xd1\x24\x95\x1d\xe8\xfa\xf6\xab\x13\x90\xb6\xcb\x76\xeb\x5f\xff\x4e\xbe\xaf\xdd\x6f\xad\xf9\xa0\x02\xe5\x4c\x30\xe4\x89\xa4\xf4\x30\x66\x09\x25\xdc\x08\x46\x0e\x8e\x20\x1f\x01\xc1\x21\x7b\x38\x66\x06\xba\x11\xcf\x30\x11\x5d\x00\x1d\x67\x11\x6b\x70\x18\xb4\x14\xca\x5a\x74\x25\x95\x90\x4e\xb2\xb3\x66\xbb\xb7\xc6\x9a\x29\x94\x73\xed\x0f\x33\xa0\x40\x67\xcd\x4a\x68\x20\x57\x96\x87\x95\xc7\x42\x87\xc2\xd7\xe4\xba\xb5\x76\xd6\x3d\x94\x10\x69\xa3\x4d\xcd\xbd\x96\x22\xf9\x80\xa9\xab\x34\x75\xd2\x5e\xd4\x99\x90\x9e\x73\xe4\x1c\x1b\xad\xec\x22\x9e\x82\x53\xdc\x88\x7c\xa9\xd3\xe9\x4c\x4c\x5a\x4e\x18\xe9\xed\xe9\x05\x30\x79\x8d\x4d\xef\x1d\x9e\x97\x70\xe2\x7c\x1d\xe1\x73\xfe\x0b\xaa\x87\x76\x5b\x66\x4f\xfc\x4f\x17\x3c\x89\xb3\x66\xb3\x40\x36\xf7\x43\x0c\xe9\xb7\x7f\x13\x84\x88\x5f\x5d\x13\xda\x40\xf5\xb8\x7f\xab\x07\x51\xcd\xcb\x49\xd6\xdc\xd7\x54\x40\x40\x5d\x7a\xd8\xfe\x5c\xa9\x57\x3c\xe0\xda\x2f\x52\x8a\xd7\xef\x00\x00\x00\xff\xff\x5f\xbd\x67\xef\xe4\x01\x00\x00")

func sqlMkmpriceweekshighSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMkmpriceweekshighSql,
		"sql/mkmPriceWeeksHigh.sql",
	)
}

func sqlMkmpriceweekshighSql() (*asset, error) {
	bytes, err := sqlMkmpriceweekshighSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mkmPriceWeeksHigh.sql", size: 484, mode: os.FileMode(438), modTime: time.Unix(1452482928, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMkmpriceweekslowSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\xc1\x6e\xf3\x20\x0c\xc7\xcf\x45\xe2\x1d\x7c\xf8\xa4\x26\x51\xd4\x7e\x3b\x4f\xdb\x75\x8f\x51\x31\x70\x12\xd4\x00\x91\x4d\x1b\xe5\xed\x17\x43\x2b\x6d\x97\xed\x16\xe3\xbf\xf1\xef\x17\xce\x9d\x56\x1f\x98\x21\x4f\x08\x73\x5a\x91\x73\x0f\x4b\x62\x9f\xfd\x1d\x61\x21\x6f\x11\xd2\x00\x06\xac\x21\x07\x43\x22\xc0\x3b\xd2\x06\x2b\xe2\x15\x8c\xa5\xc4\xac\x95\x99\x67\x09\xf9\x7c\x64\x19\x89\xd9\xc7\x91\x4f\x5a\x75\x67\xad\xb4\x5a\x7d\x9e\x4a\x7e\xde\xc0\x30\x34\x5a\x1d\x18\x67\xb4\x79\xff\x38\x38\x93\xf1\x92\xe9\x16\x6d\x73\x94\xcc\xb1\x87\xec\x03\xb6\x92\x94\xba\x97\x50\x40\xe7\x4d\x6c\x0a\x4d\xe9\xd4\x83\xd2\x63\x94\x7b\x06\x4a\xa1\xd2\xf2\x29\x98\xd1\x5b\xc1\x0d\x86\xae\xa5\xbb\x4e\x48\x28\xe1\x68\x02\xbe\xfd\x7b\x01\x13\x9d\x94\x55\xef\x1d\xfe\xef\xc5\x48\xe9\xb6\xc0\xe7\xf6\x1b\x54\x0f\x75\x5b\x22\x87\xf4\x47\x16\x1c\xb2\xd5\xaa\xdd\x21\xab\xfb\x25\xf8\xf8\xd3\xbf\x0a\xc2\x7e\xde\x54\xa1\x16\x8a\xc7\xe3\x5f\x3d\x89\x4a\xbd\xdf\xa4\xd5\x63\x4c\x04\x18\xc4\xa5\x87\xee\xfb\x48\x59\xf1\x84\xab\x4f\x24\x14\xaf\x5f\x01\x00\x00\xff\xff\xb0\x5d\xae\xc6\xe4\x01\x00\x00")

func sqlMkmpriceweekslowSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMkmpriceweekslowSql,
		"sql/mkmPriceWeeksLow.sql",
	)
}

func sqlMkmpriceweekslowSql() (*asset, error) {
	bytes, err := sqlMkmpriceweekslowSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mkmPriceWeeksLow.sql", size: 484, mode: os.FileMode(438), modTime: time.Unix(1452482039, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMtgpriceclosestSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x90\x3f\x6f\xc2\x30\x10\xc5\xf7\x48\xf9\x0e\x37\x30\x00\xa2\x20\xda\xb1\xa2\x12\x7b\xa7\x16\xa9\xea\x78\xb1\x8f\xe4\x24\xff\x01\xfb\x12\xca\xb7\xef\xc5\x2e\x43\xa7\x38\xf7\xe7\xf7\xde\xbd\xdd\xba\x6d\x3e\x48\xc6\x14\x32\xc8\x40\x70\x49\x6c\x08\xce\x31\x01\x42\xcf\x13\x05\x30\x98\xec\x2e\x93\x80\x89\xbe\xe3\x80\xc2\x31\xb4\xcd\x8d\x65\x00\x61\x4f\x60\x5c\xcc\x94\x05\x24\xfe\x01\xe2\xc4\x96\x6c\x69\x6e\xdb\xa6\x6d\x4e\x5a\x45\x73\x1d\x39\x69\xb5\xf2\x6f\xec\x1c\x1c\xdf\xbf\x8e\xdf\x9f\xd0\x69\xf7\x2c\x94\x60\xd6\x94\xc2\x28\xdc\x07\x68\x0b\xa7\x41\xeb\x9e\x50\x2d\x22\x5c\x47\x4a\x77\x5d\x52\x8b\x54\x86\xb3\x60\x12\x88\x67\xb0\x28\x58\xc9\xa9\x1c\x04\x21\xca\xc0\xa1\x9f\x01\x9c\x81\xeb\x81\x1d\x0d\x38\x71\x1c\x13\xdc\x08\x2c\x65\x75\x05\x58\x5b\xe8\xd4\xc6\x7c\xe0\xa4\x0e\xe3\xe8\x6c\x11\xd5\x6e\xe6\x3e\x28\x48\xd5\xb3\x7e\xdc\xbf\x94\x54\x4e\x85\x29\x97\xbf\x62\xa1\x1a\xaa\x11\x3e\xc2\xd3\x20\xd6\xbb\x39\x8c\x4c\x8e\x8c\x40\x40\x4f\x1b\xd0\xc6\xa6\x1c\xbb\x79\x10\x53\xf4\xf5\x99\xb7\x5e\xfa\xf2\xd2\xac\x07\x52\x93\xf3\xca\x61\xb1\x07\x0c\x76\x5e\x3c\x2c\x9e\xcb\x73\xf1\x02\x6f\x85\xd1\x36\x31\x59\x8d\xb1\xbb\xb7\x0d\x76\x79\x49\x3f\x92\xd0\xc8\x92\x2e\xd1\x0c\x95\xac\xb3\x4f\x65\x76\xb5\x6a\x1b\xc7\x9e\x05\xf6\xaf\xbf\x01\x00\x00\xff\xff\xcb\x0f\x19\x19\x02\x02\x00\x00")

func sqlMtgpriceclosestSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMtgpriceclosestSql,
		"sql/mtgPriceClosest.sql",
	)
}

func sqlMtgpriceclosestSql() (*asset, error) {
	bytes, err := sqlMtgpriceclosestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mtgPriceClosest.sql", size: 514, mode: os.FileMode(438), modTime: time.Unix(1435431998, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMtgpricelatestSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x24\xcc\xc1\x0b\x82\x30\x1c\xc5\xf1\xfb\x60\xff\xc3\x3b\x78\x12\x51\xec\x1a\x1e\x4a\x17\x09\x9a\x30\x85\xe8\xb8\x74\xd5\x20\xa7\x6c\x3f\xff\xff\xd4\x6e\x9f\xc3\xfb\xbe\x24\xe4\x4c\x6a\x5a\x9c\xf5\xa0\x8f\xc6\x57\x91\xf6\x84\x65\x1e\x56\xe0\x35\x39\x28\xf4\xca\x0d\x89\xd7\x84\x7e\x1a\x9f\xc6\x2a\x32\x93\x8d\x39\x0b\x13\xce\x38\x6b\x45\x25\xf2\x0e\x56\x8d\x3a\xc2\x3a\x8a\x40\x66\xe3\xec\x4c\xaf\x71\x91\x4d\xfd\xa7\x8f\x47\x7a\xef\xe2\xec\x7e\x15\x52\xec\x49\x16\xa4\x38\xdd\x8a\x2d\xcc\x82\x03\x67\x8d\x2c\x84\xc4\xf9\xb1\x9f\xa0\x10\x6d\x8e\xaa\xac\xcb\x0e\xe9\xf1\x17\x00\x00\xff\xff\x43\xd3\x86\x0d\xaa\x00\x00\x00")

func sqlMtgpricelatestSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMtgpricelatestSql,
		"sql/mtgPriceLatest.sql",
	)
}

func sqlMtgpricelatestSql() (*asset, error) {
	bytes, err := sqlMtgpricelatestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mtgPriceLatest.sql", size: 170, mode: os.FileMode(438), modTime: time.Unix(1451962411, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMtgpricelatesthighestSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\xcf\x6e\xf2\x30\x10\xc4\xcf\xb1\xe4\x77\x98\xc3\x27\x91\xa0\x7c\xa5\x5c\xe9\x9f\x4b\x8b\x2a\xa4\x8a\x1e\xe0\x8e\xdc\x64\x49\xac\x26\x71\x64\xbb\x58\xbc\x7d\xbd\x09\xa9\xe0\xd2\x53\x9c\xdd\x99\x9d\xdf\xee\x62\x2e\xc5\x1b\x79\xf8\x9a\x50\xeb\xaa\x26\xe7\x73\xf4\xc6\x69\xaf\x4f\x84\xde\xea\x82\x60\x8e\x50\x28\x94\x2d\xa1\x0a\x6b\x9c\x83\x6a\x1a\x2e\x6a\xef\x58\xd1\x79\xdd\x55\x6e\xe6\xa4\x68\x94\x8f\xfe\xd1\xe5\xee\xa4\x98\x2f\xa4\x90\x22\x68\x5f\x23\x6a\xce\x87\xa0\xbb\xd2\x04\x28\x87\x54\x8a\xc4\x51\x43\x85\xc7\x1c\x47\x6b\xda\xc9\xd4\xfa\x6a\x78\xc5\x7e\xa8\xc9\xf2\x37\xe9\x54\x4b\x4f\xff\x96\x50\x5d\x39\xfc\x9a\x90\x66\xf8\x1f\x47\xb6\x84\x47\xcc\x96\x08\x44\x5f\xb3\xd5\x2a\x92\x90\x3d\xa9\x66\x12\x8e\xf4\xcf\xb8\x97\x22\xcb\xa5\x88\xd4\x07\x47\x91\xf9\x36\x3f\x96\x46\x82\x6b\xc4\x21\x1b\x53\x70\x65\xcd\x77\x8f\xcf\x33\x6b\xe3\x2c\x29\x2e\x56\xee\xe7\x5c\xcc\x07\x98\xfc\x72\x2f\x9e\x96\xf2\xe6\xc9\x6e\xfd\xbe\x7e\xd9\xe3\x75\xb3\xdb\x6f\xb6\xf1\xf1\xb1\x4d\xa3\x3a\xfb\xcb\x78\x8d\x71\x7d\x04\xc6\xd4\x1d\xd2\xdb\xab\x4d\x3b\x45\xa6\xc4\xd8\x92\xec\x85\x72\x9c\x8b\x92\x5c\xc1\x20\x19\xef\xec\xa9\xed\xf1\x2b\x1a\x13\x59\x80\x46\xb7\xda\x63\xf9\xf0\x13\x00\x00\xff\xff\x1c\xb0\x42\x55\x0c\x02\x00\x00")

func sqlMtgpricelatesthighestSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMtgpricelatesthighestSql,
		"sql/mtgPriceLatestHighest.sql",
	)
}

func sqlMtgpricelatesthighestSql() (*asset, error) {
	bytes, err := sqlMtgpricelatesthighestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mtgPriceLatestHighest.sql", size: 524, mode: os.FileMode(438), modTime: time.Unix(1451966825, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMtgpricelatestlowestSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\xcf\x6e\xf2\x30\x10\xc4\xcf\xb1\xe4\x77\x98\xc3\x27\x91\xa0\x7c\xa5\x5c\xe9\x9f\x4b\x8b\x2a\xa4\x8a\x1e\xe0\x8e\xdc\x64\x01\xab\x4e\x1c\x79\x5d\x2c\xde\xbe\x76\x42\x2a\xb8\x54\x39\xc4\x5e\xcf\xec\xfc\x76\x67\x53\x29\xde\xc8\xc3\x1f\x09\xc6\x06\x62\x5f\xa2\xb3\xac\xbd\x3e\x11\x3a\xa7\x2b\x82\xdd\x43\xa1\x52\xae\x86\xaa\x9c\x65\x86\x32\x26\x15\xb5\xe7\xa4\x68\xbd\x6e\x0f\x3c\x61\x29\x8c\xf2\xd1\x3f\xb8\xf8\x4e\x8a\xe9\x4c\x8a\xf4\x05\xed\x8f\x88\xaa\xf3\x2e\xe8\xb6\xb6\x01\x8a\x91\x4b\x91\x31\x19\xaa\x3c\xa6\xd8\x3b\xdb\x8c\xb6\xc6\x1f\xfa\x53\x7c\x0f\x47\x72\xe9\x9f\xb5\xaa\xa1\xa7\x7f\x73\xa8\xb6\xee\xaf\x36\xe4\x05\xfe\xc7\x96\x0d\xe1\x11\x93\x39\x02\xd1\xd7\x64\xb1\x88\x2c\xe4\x4e\xca\x8c\xc2\x81\xff\x19\xf7\x52\x14\xa5\x14\x91\x7b\xc7\x14\xa9\x6f\xf3\x63\x69\x20\xb8\x46\xec\xb3\x31\x06\x1f\x9c\xfd\xee\xf0\x79\x4e\xda\xd8\x4b\x8a\x8b\x35\xbd\x97\xa9\x58\xf6\x30\xe5\x65\x63\xa9\x5b\x9e\x26\xcf\x36\xcb\xf7\xe5\xcb\x16\xaf\xab\xcd\x76\xb5\x8e\x87\x8f\x75\x1e\xd5\xc5\x5f\xc6\x6b\x8c\xeb\x25\x24\x4c\xdd\x22\xbf\xdd\xda\x38\x53\x64\xca\xac\xab\xc9\x5d\x28\x87\xbe\xa8\x89\xab\x04\x52\xa4\x99\x3d\x35\x1d\x7e\x45\x43\xa2\xe2\x0a\x46\x37\xda\x63\xfe\xf0\x13\x00\x00\xff\xff\x81\x91\xd3\xf1\x0c\x02\x00\x00")

func sqlMtgpricelatestlowestSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMtgpricelatestlowestSql,
		"sql/mtgPriceLatestLowest.sql",
	)
}

func sqlMtgpricelatestlowestSql() (*asset, error) {
	bytes, err := sqlMtgpricelatestlowestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mtgPriceLatestLowest.sql", size: 524, mode: os.FileMode(438), modTime: time.Unix(1452235787, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMtgpricesetlatestSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x8c\x31\x6e\x85\x30\x10\x44\x7b\x4b\xbe\xc3\x14\x29\x80\x02\x44\x1d\x71\x89\xdc\xc0\xb1\x87\xb0\x12\xb6\xa3\xf5\x86\x88\xdb\x27\x84\x48\xbf\xfd\xed\xbc\x79\x6f\x1a\xbc\x7b\xa3\x7d\x69\x69\xb0\x8d\xd8\x83\xb1\x19\x3e\x55\x22\xb1\x56\x05\x0f\xea\x89\x18\x34\x41\x0a\xc2\x2f\xa9\x87\x24\x26\x34\xda\xe8\xdd\x30\x79\xe7\x5d\xe3\xce\x68\x18\xb0\x6a\xcd\xb7\xdc\xc6\x6c\x1f\x77\xe6\x7b\xa3\xf2\xfa\x2f\x2f\x33\x42\x49\x30\xc9\x5c\xba\x7f\x29\x49\x33\x29\xd1\xba\x6b\xed\x9f\x28\x54\x4d\x54\xbc\x9f\x7f\x19\x24\xb6\x88\x5d\xb2\x18\xe6\xfe\xc1\x6e\xef\x82\xaf\x3f\x01\x00\x00\xff\xff\xbd\x15\x77\xd2\xe3\x00\x00\x00")

func sqlMtgpricesetlatestSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMtgpricesetlatestSql,
		"sql/mtgPriceSetLatest.sql",
	)
}

func sqlMtgpricesetlatestSql() (*asset, error) {
	bytes, err := sqlMtgpricesetlatestSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mtgPriceSetLatest.sql", size: 227, mode: os.FileMode(438), modTime: time.Unix(1441082607, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMtgpriceweekshighSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\xc1\x6e\xfb\x20\x0c\xc6\xcf\x45\xe2\x1d\x7c\xf8\x4b\x4d\xa2\xa8\xfd\xef\x3c\x6d\xd7\x3d\x46\xc5\xc0\x49\xd0\x02\x44\xd8\x6d\x96\xb7\x5f\x0c\xad\xb4\x5d\xb6\x53\xf8\xf0\x67\xfb\xfb\x85\x73\xa7\xd5\x1b\x32\xf0\x84\x30\xa7\x15\x89\x7b\x58\x12\x79\xf6\x37\x84\x25\x7b\x8b\x90\x06\x30\x60\x4d\x76\x30\xa4\x0c\x78\xc3\xbc\xc1\x8a\xf8\x01\xc6\xe6\x44\xa4\x95\x99\x67\x31\x79\x3e\x92\xb4\x44\xf6\x71\xa4\x93\x56\xdd\x59\x2b\xad\x56\xcf\x53\xf1\xcf\x1b\x18\x82\x46\xab\x03\xe1\x8c\x96\xf7\xc3\xc1\x19\xc6\x0b\xe7\x6b\xb4\xcd\x51\x3c\xc7\x1e\xd8\x07\x6c\xc5\x29\xba\x17\x53\x40\xe7\x4d\x6c\x4a\x9a\x52\xa9\x17\xa5\x46\x28\x73\x86\x9c\x42\x4d\x4b\xa7\xc0\x63\x39\xed\xd7\xeb\x84\x59\xbe\x87\x68\x02\xbe\xfc\x7b\x02\x13\x9d\xc8\xca\xf5\x0a\xff\x77\x31\xe6\x74\x5d\xe0\x7d\xfb\x2d\x4d\x0f\x75\x4d\xca\x0e\xf3\x1f\x5e\x70\x48\x56\xab\x76\x4f\x57\xa1\x2f\xc1\xc7\x9f\xe0\x95\x0c\x82\xf9\x6c\x2a\x49\x0b\x05\xe0\xfe\x93\x1e\x89\x8a\xde\x27\x69\x75\x6f\x13\x00\x02\x61\xe9\xa1\xfb\xde\x52\x56\x3c\xc2\xd5\xb7\x91\x14\xcf\x5f\x01\x00\x00\xff\xff\x9d\xc5\xd4\xb5\xdd\x01\x00\x00")

func sqlMtgpriceweekshighSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMtgpriceweekshighSql,
		"sql/mtgPriceWeeksHigh.sql",
	)
}

func sqlMtgpriceweekshighSql() (*asset, error) {
	bytes, err := sqlMtgpriceweekshighSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mtgPriceWeeksHigh.sql", size: 477, mode: os.FileMode(438), modTime: time.Unix(1452479763, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlMtgpriceweekslowSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\xc1\x6e\xc3\x20\x0c\x86\xcf\x45\xe2\x1d\x7c\x98\xd4\xb4\x8a\xda\xed\x3c\x6d\xd7\x3d\x46\xc5\xc0\x49\xd0\x02\x44\xd8\x6d\x94\xb7\x1f\x86\x56\xda\x2e\xdb\x29\xfc\xe6\xb7\xfd\x7f\xe1\x7c\xd4\xea\x03\x19\x78\x42\x98\xd3\x8a\xc4\x3d\x2c\x89\x3c\xfb\x1b\xc2\x92\xbd\x45\x48\x03\x18\xb0\x26\x3b\x18\x52\x06\xbc\x61\xde\x60\x45\xfc\x02\x63\x73\x22\xd2\xca\xcc\xb3\x98\x3c\xef\x49\x5a\x22\xfb\x38\xd2\x49\xab\xe3\x59\x2b\xad\x56\xcf\x53\xf5\xcf\x1b\x18\x82\x4e\xab\x1d\xe1\x8c\x96\xcb\x61\xe7\x0c\xe3\x85\xf3\x35\xda\x6e\x2f\x9e\x7d\x0f\xec\x03\x1e\xc4\x29\xba\x17\x53\x40\xe7\x4d\xec\x6a\x9a\x7a\xd3\x0a\xf5\x8e\x50\xe6\x0c\x39\x85\x96\x96\x4e\x81\xc7\x7a\x2a\xe5\x75\xc2\x2c\xdf\x5d\x34\x01\xdf\x9e\x5e\xc0\x44\x27\xb2\x71\xbd\xc3\x73\x11\x63\x4e\xd7\x05\x3e\xb7\xbf\xd2\xf4\xd0\xd6\xa4\xec\x30\xff\xe3\x05\x87\x64\xb5\x3a\x94\x74\x0d\xfa\x12\x7c\xfc\x0d\xde\xc8\xa0\xd4\xbb\x46\x72\x80\x0a\x70\xff\x49\x8f\x44\x55\x97\x49\x5a\xdd\xdb\x04\x80\x40\x58\x7a\x38\xfe\x6c\xa9\x2b\x1e\xe1\xda\xdb\x48\x8a\xd7\xef\x00\x00\x00\xff\xff\x72\x25\x1d\x9c\xdd\x01\x00\x00")

func sqlMtgpriceweekslowSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlMtgpriceweekslowSql,
		"sql/mtgPriceWeeksLow.sql",
	)
}

func sqlMtgpriceweekslowSql() (*asset, error) {
	bytes, err := sqlMtgpriceweekslowSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/mtgPriceWeeksLow.sql", size: 477, mode: os.FileMode(438), modTime: time.Unix(1452476169, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"sql/addPriceMKMprice.sql": sqlAddpricemkmpriceSql,
	"sql/addPriceMTGprice.sql": sqlAddpricemtgpriceSql,
	"sql/bulkExtrema.sql": sqlBulkextremaSql,
	"sql/bulkLatest.sql": sqlBulklatestSql,
	"sql/historicalPriceMKMprice.sql": sqlHistoricalpricemkmpriceSql,
	"sql/historicalPriceMTGprice.sql": sqlHistoricalpricemtgpriceSql,
	"sql/medianMKM.sql": sqlMedianmkmSql,
	"sql/medianMtgprice.sql": sqlMedianmtgpriceSql,
	"sql/mkmPriceClosest.sql": sqlMkmpriceclosestSql,
	"sql/mkmPriceLastest.sql": sqlMkmpricelastestSql,
	"sql/mkmPriceLatestHighest.sql": sqlMkmpricelatesthighestSql,
	"sql/mkmPriceLatestLowest.sql": sqlMkmpricelatestlowestSql,
	"sql/mkmPriceSetLatest.sql": sqlMkmpricesetlatestSql,
	"sql/mkmPriceWeeksHigh.sql": sqlMkmpriceweekshighSql,
	"sql/mkmPriceWeeksLow.sql": sqlMkmpriceweekslowSql,
	"sql/mtgPriceClosest.sql": sqlMtgpriceclosestSql,
	"sql/mtgPriceLatest.sql": sqlMtgpricelatestSql,
	"sql/mtgPriceLatestHighest.sql": sqlMtgpricelatesthighestSql,
	"sql/mtgPriceLatestLowest.sql": sqlMtgpricelatestlowestSql,
	"sql/mtgPriceSetLatest.sql": sqlMtgpricesetlatestSql,
	"sql/mtgPriceWeeksHigh.sql": sqlMtgpriceweekshighSql,
	"sql/mtgPriceWeeksLow.sql": sqlMtgpriceweekslowSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"sql": &bintree{nil, map[string]*bintree{
		"addPriceMKMprice.sql": &bintree{sqlAddpricemkmpriceSql, map[string]*bintree{
		}},
		"addPriceMTGprice.sql": &bintree{sqlAddpricemtgpriceSql, map[string]*bintree{
		}},
		"bulkExtrema.sql": &bintree{sqlBulkextremaSql, map[string]*bintree{
		}},
		"bulkLatest.sql": &bintree{sqlBulklatestSql, map[string]*bintree{
		}},
		"historicalPriceMKMprice.sql": &bintree{sqlHistoricalpricemkmpriceSql, map[string]*bintree{
		}},
		"historicalPriceMTGprice.sql": &bintree{sqlHistoricalpricemtgpriceSql, map[string]*bintree{
		}},
		"medianMKM.sql": &bintree{sqlMedianmkmSql, map[string]*bintree{
		}},
		"medianMtgprice.sql": &bintree{sqlMedianmtgpriceSql, map[string]*bintree{
		}},
		"mkmPriceClosest.sql": &bintree{sqlMkmpriceclosestSql, map[string]*bintree{
		}},
		"mkmPriceLastest.sql": &bintree{sqlMkmpricelastestSql, map[string]*bintree{
		}},
		"mkmPriceLatestHighest.sql": &bintree{sqlMkmpricelatesthighestSql, map[string]*bintree{
		}},
		"mkmPriceLatestLowest.sql": &bintree{sqlMkmpricelatestlowestSql, map[string]*bintree{
		}},
		"mkmPriceSetLatest.sql": &bintree{sqlMkmpricesetlatestSql, map[string]*bintree{
		}},
		"mkmPriceWeeksHigh.sql": &bintree{sqlMkmpriceweekshighSql, map[string]*bintree{
		}},
		"mkmPriceWeeksLow.sql": &bintree{sqlMkmpriceweekslowSql, map[string]*bintree{
		}},
		"mtgPriceClosest.sql": &bintree{sqlMtgpriceclosestSql, map[string]*bintree{
		}},
		"mtgPriceLatest.sql": &bintree{sqlMtgpricelatestSql, map[string]*bintree{
		}},
		"mtgPriceLatestHighest.sql": &bintree{sqlMtgpricelatesthighestSql, map[string]*bintree{
		}},
		"mtgPriceLatestLowest.sql": &bintree{sqlMtgpricelatestlowestSql, map[string]*bintree{
		}},
		"mtgPriceSetLatest.sql": &bintree{sqlMtgpricesetlatestSql, map[string]*bintree{
		}},
		"mtgPriceWeeksHigh.sql": &bintree{sqlMtgpriceweekshighSql, map[string]*bintree{
		}},
		"mtgPriceWeeksLow.sql": &bintree{sqlMtgpriceweekslowSql, map[string]*bintree{
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

