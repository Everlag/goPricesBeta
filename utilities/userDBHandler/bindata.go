// Code generated by go-bindata.
// sources:
// sql\addCard.sql
// sql\addCardHistorical.sql
// sql\addCollection.sql
// sql\addReset.sql
// sql\addSession.sql
// sql\addUser.sql
// sql\getAllResets.sql
// sql\getCard.sql
// sql\getCollectionContents.sql
// sql\getCollectionHistory.sql
// sql\getCollectionList.sql
// sql\getCollectionMeta.sql
// sql\getReset.sql
// sql\getSessions.sql
// sql\getSub.sql
// sql\getUser.sql
// sql\modSub.sql
// sql\removeSession.sql
// sql\setCollectionPermissions.sql
// sql\setMaxCollections.sql
// sql\setPassword.sql
// sql\setSubEffects.sql
// DO NOT EDIT!

package userDB

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _sqlAddcardSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x52\xcb\x6e\xdb\x30\x10\x3c\xdb\x80\xff\x61\x0f\x39\x24\x81\xd3\xa0\xef\xd7\x51\xf0\xad\xe8\xcb\x2a\xd0\x5b\xc1\x98\x6b\x99\x28\xc5\x55\xc5\x55\x02\xfd\x7d\x87\xa4\x12\x09\xce\x61\x05\x69\x67\x38\xbb\x33\xe2\xed\xf5\x66\xbd\x59\xff\xfa\xbe\xdf\xfd\xac\x23\xb9\xa0\x42\x43\xe4\xbe\x12\xef\xf9\xa0\x4e\x42\x25\x41\x39\x68\x44\xdb\x85\x86\xf4\xc4\x64\xac\xfd\x73\x30\xbd\xa5\xe3\x10\x32\xe7\x45\xd2\xa8\x64\xf0\x96\x3a\x49\x6c\x67\xbc\x1f\xc9\x8b\x74\x74\x94\x9e\xef\xb9\xa7\xbb\x41\xa9\x11\xb1\x78\x58\xb2\xc2\x11\xd4\xa8\x4d\x8f\x97\xc0\x6c\x21\xec\xf0\x66\xd4\xdd\xb3\x1f\xb3\xe0\xd3\x98\x93\x89\x79\x2e\xa4\x5a\xa3\x9b\xf5\xea\x11\xb9\x8c\x1d\x1f\xbe\x3d\x04\xc8\xd7\xbb\xdf\xf5\x96\xd2\xf7\xbc\x7a\x69\x82\xbf\x5a\x65\x00\x27\xbe\x9a\x96\x17\xdc\x3d\xeb\x59\xa7\x92\xb6\x85\x81\xb3\xa3\x3f\x06\x03\x53\x3a\xa6\x80\x0a\x0f\x1d\x9f\x1a\x30\x11\xdd\x9d\xe7\xe9\xbb\x80\xb5\x83\xa6\xe2\x11\xd5\xb4\xdd\x55\x32\x53\x9b\xbf\x1c\x3f\x41\x50\xf2\xba\x37\x14\xb5\x47\x9e\xdb\x9c\x36\xdc\x19\x25\x20\xf8\x03\xc9\xdf\x61\xb6\x30\x13\x17\x4d\x39\x96\x13\xe9\x6c\xa2\x3f\x1a\x9b\xc9\x29\xae\x56\x1b\x4a\x10\x18\x71\xf2\xf9\x9c\x00\x24\x0f\x2c\xae\x67\xdc\x94\xc5\x26\x00\x94\x7f\x93\xe1\x25\xc5\xf2\xd1\x05\xfc\xbb\x09\x03\xcb\x1b\xdc\x91\x25\x25\x35\x06\xd3\x30\x92\x4b\xf3\x8a\x50\xc9\xf2\xa6\xa4\x79\x92\x07\x6a\x4d\x18\xf3\xae\x71\xb3\xbe\xbe\x4d\x79\xed\x77\x5f\x76\x55\xfd\x74\xd5\x2e\x2f\x5e\x6e\xe9\xe2\x15\xea\x35\xea\x0d\xea\x2d\xea\x1d\xea\x3d\xea\x03\xea\xe3\xd5\xe7\xff\x01\x00\x00\xff\xff\x00\xd9\x70\xcb\xcc\x02\x00\x00")

func sqlAddcardSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlAddcardSql,
		"sql/addCard.sql",
	)
}

func sqlAddcardSql() (*asset, error) {
	bytes, err := sqlAddcardSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/addCard.sql", size: 716, mode: os.FileMode(438), modTime: time.Unix(1429059132, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlAddcardhistoricalSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x50\xcb\x6e\xc2\x30\x10\x3c\x67\xbf\x62\x0f\x1c\x00\xb9\xa0\xbe\x1f\xb7\x0a\x21\x15\xa9\xa2\x52\x81\xde\x2d\xb2\x04\xab\x89\xdd\xda\x1b\xa1\xfc\x7d\xd7\x4e\xd2\x86\x43\x0f\xe3\xc3\xce\x8c\x77\x76\xe6\x53\x58\xd9\x40\x9e\x03\x6a\xf4\xee\x84\xc6\xb2\x43\x3e\x12\xd6\x32\x5d\xb8\xb2\xa4\x3d\x1b\x67\x17\xce\x32\x59\x0e\x33\x80\xad\xfe\xa4\xf0\x04\x99\x3b\x59\xf2\x78\x81\x81\xbd\xb1\x85\x4a\x06\x71\x6a\x46\x61\x02\x1a\x86\x6c\xff\xeb\x1f\xe8\x06\x43\x77\x68\x0d\xd1\x2a\x6a\xed\xf3\xb5\xae\x68\xa0\x8d\x41\x2a\x2e\x30\x52\x90\x05\xe2\x7f\x78\x61\xe2\xb6\xaa\x92\x8c\x03\x5a\xb7\xa1\x3a\x02\xb2\xef\x5a\x97\x86\x9b\x33\x45\x4e\x07\x63\x29\xc7\x8e\x83\xac\xd4\xb6\x38\x53\xc4\x41\xad\x0b\x92\x6e\xe2\xb2\xf4\x8d\xe5\xf6\x1f\xa9\x4b\xe1\x51\x7a\xab\xb4\x6d\x52\xcc\x00\xd3\x39\xc0\x6a\xbd\x59\xbe\x6f\x71\xb5\xde\xbe\xa5\x0c\x61\xf6\x77\xf6\x8b\x09\xec\x7c\x83\x30\x4e\x15\x0e\x1b\x51\xd8\x97\xa0\xb0\xbb\x56\xf5\xf1\x15\xf6\x7b\x55\x1f\x56\xa5\x6c\xf1\x0d\xbc\xfb\xca\x35\xd3\x04\xe1\xe3\xf9\x75\xb7\xdc\xc0\x78\x74\xa9\x70\x74\x25\xb8\x16\xdc\x08\x6e\x05\x77\x82\x7b\xc1\x83\xe0\x71\xf2\x13\x00\x00\xff\xff\xf0\x77\x5b\x0e\xfe\x01\x00\x00")

func sqlAddcardhistoricalSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlAddcardhistoricalSql,
		"sql/addCardHistorical.sql",
	)
}

func sqlAddcardhistoricalSql() (*asset, error) {
	bytes, err := sqlAddcardhistoricalSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/addCardHistorical.sql", size: 510, mode: os.FileMode(438), modTime: time.Unix(1429058997, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlAddcollectionSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8e\xbf\x4e\x80\x30\x10\xc6\x67\x9b\xf4\x1d\x6e\x20\x51\x08\x42\xd4\xcd\xcd\x81\x81\x44\x31\x11\x74\xaf\x70\xb5\x8d\xd8\x1a\xee\x08\x3e\xbe\x47\x07\x82\x8e\xf7\xdd\xef\xfb\x53\x17\x5a\xf5\x18\x26\x02\x03\x76\x41\x72\x30\xc6\x79\xc6\x91\x7d\x0c\x10\xad\x05\x8e\xc0\x0e\x61\x7a\xaf\xb4\xd2\xea\xc9\xfc\x9c\x00\x02\x4f\x40\xc8\x07\x84\xd6\xac\x33\x8b\x0f\xee\x12\x3e\x98\x4f\xa4\x7b\xad\x2e\xe2\x16\x70\x81\x6b\x20\x5e\x7c\xf8\x28\x13\xbd\x92\x48\xec\x8c\xf0\x9b\x44\xb1\xf3\x24\x64\x30\x5f\xf8\x0f\xfc\x53\x38\x61\x60\x6f\xbd\x58\x7d\x38\x62\x2e\x65\xc6\xb7\x19\x51\xab\xa2\xde\x7b\xdb\xae\x6f\x5e\x06\x68\xbb\xe1\x39\xfd\xa9\x3a\x67\x68\x75\x95\xf6\x94\xb0\x97\xe5\x72\xbf\x3d\x3c\xbe\x36\xbd\xe8\xd9\x4d\x09\xd9\x6d\xfe\x1b\x00\x00\xff\xff\x4a\x96\x4b\xab\x16\x01\x00\x00")

func sqlAddcollectionSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlAddcollectionSql,
		"sql/addCollection.sql",
	)
}

func sqlAddcollectionSql() (*asset, error) {
	bytes, err := sqlAddcollectionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/addCollection.sql", size: 278, mode: os.FileMode(438), modTime: time.Unix(1428963928, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlAddresetSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\x3f\x4f\xc3\x30\x10\xc5\x67\x22\xf9\x3b\xbc\xa1\x03\xad\x0c\x15\x7f\x26\x36\x86\x0e\x15\xa8\x48\x24\x74\x41\x0c\x17\xf9\x02\x56\x1b\xa7\xf2\x5d\x83\xf2\xed\x39\x07\x46\x06\x4b\x96\xde\xef\xe9\xfd\x6e\xbd\x72\x55\xcd\x29\x08\x08\x42\x89\x8f\x13\x02\xe7\x38\x72\x40\x66\x61\xc5\xd0\x75\xd0\x01\xfa\xc5\x08\xa4\xd4\x92\xb0\xab\x5c\xd5\xd0\x81\xe5\xc1\x55\x17\x89\x7a\xc6\x15\x44\x73\x4c\x9f\x1e\x67\xe1\x6c\x30\x59\xf1\x3b\x09\xa2\x1a\x22\x2c\x12\x87\xf4\xc4\x93\x81\xef\x1f\xed\xa4\xec\x6d\x6e\xa4\x63\x0c\xf8\x0b\x71\xe0\xa9\xa0\x4a\x59\xf7\x25\xf0\x30\xab\xf9\x67\x25\x8d\x3d\x5b\xd4\x9f\xc4\xa3\x1b\x32\x4e\x99\x47\x4e\x6a\x8b\xa0\xf6\x5c\x8c\x56\xeb\x62\xb5\xdd\xd5\x9b\xd7\x06\xdb\x5d\xf3\x32\x9b\xc8\xf5\x7c\x84\xc0\x55\x97\x45\xd4\xff\x1e\x65\x26\x1e\xff\x4d\x2d\x0d\xdc\x3f\x3e\xbf\x6d\x6a\x2b\x2c\x6e\x3c\x16\xb7\xf6\xee\xec\xdd\x2f\x7f\x02\x00\x00\xff\xff\x0d\xce\x15\x28\x2a\x01\x00\x00")

func sqlAddresetSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlAddresetSql,
		"sql/addReset.sql",
	)
}

func sqlAddresetSql() (*asset, error) {
	bytes, err := sqlAddresetSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/addReset.sql", size: 298, mode: os.FileMode(438), modTime: time.Unix(1428963994, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlAddsessionSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8e\x3f\x4f\x02\x41\x10\xc5\x6b\xe6\x53\xbc\x82\x02\xc8\x2a\xf1\x4f\x65\x67\x41\x41\x34\x98\x78\x27\x8d\xb1\x98\xcb\xcd\xe9\x06\x6e\x97\xec\x8c\x67\xee\xdb\x3b\x10\x12\x1a\x8a\x49\x26\xbb\x6f\xde\xef\xb7\x5c\x50\x25\xa9\x55\x30\x94\x93\xec\x47\xb4\x52\xe2\x20\x2d\x54\x54\x63\x4e\xc8\x5d\x07\xcb\xb0\x1f\x41\xcb\xc6\x0d\xab\x10\xd5\xbc\x13\x7d\xa2\x49\xe2\x5e\x70\x03\xb5\x12\xd3\x77\xc0\xaf\x4a\xf1\x24\x1b\xf2\x5f\x52\x44\xa3\xc9\xb9\xe6\x45\x46\xcf\x7d\x7e\x35\xa3\x49\x70\xd8\xc0\xfb\x78\x61\xec\x64\xf4\xa4\x71\xb1\xed\xf1\x3d\xc0\x95\x4e\x9b\xdf\x58\xec\xc5\xbf\xfa\x83\x06\x74\xb9\xe0\x50\x64\x90\x64\xce\x03\x37\x0e\xa4\xc5\x92\x68\xbd\xa9\x56\xef\x35\xd6\x9b\xfa\xed\x24\xa1\xb7\xe7\x6a\x05\xcd\x8e\x92\x01\x17\x11\xdf\xaf\xa0\xe6\xa0\xed\xf3\xeb\xc7\xaa\xa2\xd9\xf4\x2e\x60\x7a\xef\xf3\xe0\xf3\x38\xff\x0f\x00\x00\xff\xff\x92\x18\x13\x59\x24\x01\x00\x00")

func sqlAddsessionSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlAddsessionSql,
		"sql/addSession.sql",
	)
}

func sqlAddsessionSql() (*asset, error) {
	bytes, err := sqlAddsessionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/addSession.sql", size: 292, mode: os.FileMode(438), modTime: time.Unix(1428963914, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlAdduserSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\x4d\x4f\x32\x31\x10\xc7\xcf\x4f\x93\x7e\x87\x39\x70\x00\xb2\x0f\x44\xf1\xe4\xcd\x03\x89\x24\x8a\x89\xa0\xf7\xa1\x9d\x95\xc6\xdd\x96\x74\x06\x56\xbe\xbd\xd3\x5d\x21\x7a\x98\xa4\x69\x7e\xff\xb7\xf9\xd4\x9a\x0d\x45\xcf\x80\x70\xa2\x1c\xea\x40\x1e\x8e\x4c\x19\x52\x5d\x83\x24\x90\x3d\x81\x47\xc1\x1d\x32\xcd\xac\xb1\xe6\x19\xbf\xc0\xa5\xa6\x21\x27\x21\x45\x86\xc0\xc0\x24\x57\x94\x6a\x3c\x36\xa2\x6a\x58\xf4\xf8\x16\x3f\x89\xef\xad\xf9\x17\xb1\x25\xf8\x0f\x2c\x39\xc4\x8f\x6a\xc8\x90\x3d\x2a\xda\x15\x17\x51\x84\x5a\x0c\xcd\x2f\xa6\x18\xa2\xf7\x99\x98\xa1\x23\x70\x18\x35\x39\x0a\x3a\xd1\xb6\xbd\x01\x16\xd9\x01\x99\x1f\x91\xf7\xaa\xdc\x9d\x85\x70\x10\xaa\xea\xa7\x08\xbb\x7c\x3e\xc8\xb8\x60\x5d\xca\xbe\x82\x98\xa2\xa3\x49\xe9\x54\x1e\x7f\x65\xc3\x97\x9a\x7b\xa8\x53\xd6\x3d\x39\x9c\xb4\x0c\x5c\x42\xac\x99\xce\xcb\xae\xd5\x7a\xb3\x7c\xdd\xc2\x6a\xbd\x7d\xe9\xab\xf0\xac\x25\x41\xb0\x66\x5c\x86\x56\xd0\x6f\xa9\xae\xb2\x4b\xa8\x02\xef\x0f\x4f\x6f\xcb\x8d\x82\xa3\x9b\x0a\x46\xb7\x7a\x0b\xbd\xbb\xc9\x77\x00\x00\x00\xff\xff\x4f\x6f\x3b\x5c\x8b\x01\x00\x00")

func sqlAdduserSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlAdduserSql,
		"sql/addUser.sql",
	)
}

func sqlAdduserSql() (*asset, error) {
	bytes, err := sqlAdduserSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/addUser.sql", size: 395, mode: os.FileMode(438), modTime: time.Unix(1428963868, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlGetallresetsSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8d\xbd\x6a\xc3\x30\x14\x46\xe7\x0a\xf4\x0e\xdf\xd0\xa1\x35\xaa\x4d\xd7\x42\x0b\xa6\x55\x09\xe4\x0f\x1c\x93\xcc\x22\xba\x49\x84\x13\x29\x91\x64\x1b\xbf\x7d\x6c\x05\xb2\x5d\x2e\xe7\x9c\xaf\xc8\x38\x2b\xf7\xb7\xd6\x78\x0a\x88\x27\x02\x75\xe4\x07\x74\xea\x6c\x34\xc6\x1f\x45\x34\x34\xe0\xe0\x3c\x14\xae\xde\x75\x46\x93\x46\x1b\xc8\xe7\x9c\x71\x56\xab\x86\xc2\x17\x67\x2f\x56\x5d\x08\x1f\x08\xd1\x1b\x7b\x14\x09\x18\x73\x2a\xc2\xf5\x36\xc0\x44\xce\xb2\x62\x12\x36\x72\x21\x7f\x6b\x4c\xb8\x78\xf4\xe7\x34\x88\xd1\x53\x3e\x6e\xa7\x51\x01\xb2\x3a\x5d\x9c\xfd\x57\xeb\x65\x4a\x85\x3c\xa1\x81\xb3\xdd\x4c\x56\x32\xe9\xdf\xaf\x9f\x28\x57\x7f\x4f\x1c\x3f\xb0\xae\x7f\x7b\xbf\x07\x00\x00\xff\xff\xc7\x94\x70\x4a\xd2\x00\x00\x00")

func sqlGetallresetsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlGetallresetsSql,
		"sql/getAllResets.sql",
	)
}

func sqlGetallresetsSql() (*asset, error) {
	bytes, err := sqlGetallresetsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/getAllResets.sql", size: 210, mode: os.FileMode(438), modTime: time.Unix(1433183741, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlGetcardSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x50\x4f\x6b\xfb\x30\x0c\x3d\xff\x0c\xfe\x0e\x3a\x04\x7e\x50\xb2\x96\xfd\xbb\x0c\x72\x28\x5d\xc6\x0e\x5b\x07\x5d\xc7\xce\x26\x51\x5b\xb3\xd4\x5e\x2d\xa5\xa5\xdf\x7e\xb2\x93\x51\x5f\x76\xb2\xac\xf7\x9e\x9e\x9e\x66\x13\xad\xe6\xcd\xa1\xb7\x01\x09\x78\x87\xd0\x19\x46\x62\x20\x96\x17\xfc\x06\x0c\x34\x26\xb4\x60\x9d\x54\x3d\x61\xf8\x4f\xd0\xf8\xae\xc3\x86\xad\x77\x53\xad\xb4\x5a\x9b\x2f\xa4\x07\xad\xfe\xf9\x93\xc3\x00\x57\xa2\x0d\xd6\x6d\xcb\x44\x97\x99\x86\x41\x10\x02\xcb\xc2\xb9\x68\x33\x62\xd6\x14\xc7\xa4\x88\xda\x48\x17\xef\xa5\xd9\x63\x46\x8e\x4b\xee\x79\x9b\xd6\x12\x06\x21\xff\x41\x10\x44\xf0\x43\x6f\x3a\xcb\xe7\x0c\xf7\x0e\x07\x1b\x84\x01\xb4\x12\xfd\x84\xb0\x33\x47\x8c\x22\x30\x04\x47\xe9\xb7\xb0\xf1\x21\xd9\x90\x56\x93\x59\x8c\xfa\x5e\xbf\xd4\x8b\x35\xfc\x6e\x55\xc2\xe8\x5e\x8e\x93\xce\xa9\x70\x9c\xaa\xce\x10\x7f\x7c\xb7\x72\x47\xad\x9e\x56\x6f\xaf\xa0\x55\x4c\x45\xd3\x4b\xdc\x85\x77\x8c\x8e\x65\xfe\xe7\x73\xbd\xaa\x85\x91\x6e\x58\x15\xd7\x30\x5f\x3e\x66\x77\xa9\x8a\x9b\xa1\x33\x3a\x57\xc5\x6d\xfa\x8f\xfe\x55\x71\x97\xbe\xe3\x16\x55\x71\xff\x13\x00\x00\xff\xff\x5d\xee\x86\xf6\xd8\x01\x00\x00")

func sqlGetcardSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlGetcardSql,
		"sql/getCard.sql",
	)
}

func sqlGetcardSql() (*asset, error) {
	bytes, err := sqlGetcardSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/getCard.sql", size: 472, mode: os.FileMode(438), modTime: time.Unix(1428963905, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlGetcollectioncontentsSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8f\x41\x4b\x03\x31\x10\x85\xcf\x06\xf2\x1f\xe6\x50\x10\xca\xda\xa2\x47\xa1\x87\x52\x23\x1e\xb4\x42\xad\x78\x1e\xb2\xa3\x06\xb3\x89\x9b\x99\x45\xfc\xf7\x4e\xe2\x61\xf7\x94\x47\xe6\x7d\xef\xcd\x6c\xd7\xd6\xec\xfd\x38\x85\x42\x0c\xf2\x49\x10\x51\x88\x05\x58\xf4\x85\xfc\x0e\x08\x13\x53\xb9\x64\xf0\x39\x46\xf2\x12\x72\xda\x58\x63\xcd\x19\xbf\x88\x6f\xad\xb9\xc8\x3f\x89\x0a\x5c\x29\x51\x42\xfa\xe8\x9a\x5d\x93\x50\x40\x27\x0c\x41\xd4\x33\xb3\x0b\xe3\xe2\x53\x7b\x1a\x51\x59\x6b\xd6\xdb\x5a\xf0\xe2\x1e\xdd\xe1\x0c\x1e\x4b\x7f\xc4\x81\x3a\x60\x92\x7f\x31\x4e\x18\x83\xfc\x36\x91\xa4\x29\x9f\x87\x81\x92\x74\xba\x7e\x8d\x8e\xc8\xf2\xfa\xdd\xeb\x09\xd6\xdc\x9f\x9e\x9f\xac\xa9\xc9\xbc\x99\x2b\x0f\x39\x89\x02\x0c\x6f\x0f\xee\xe4\xa0\x1d\xb1\x5b\x5d\xc3\xfe\x78\xb7\x58\x6c\xb7\xba\xf9\x0b\x00\x00\xff\xff\xb9\xca\x61\x15\x21\x01\x00\x00")

func sqlGetcollectioncontentsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlGetcollectioncontentsSql,
		"sql/getCollectionContents.sql",
	)
}

func sqlGetcollectioncontentsSql() (*asset, error) {
	bytes, err := sqlGetcollectioncontentsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/getCollectionContents.sql", size: 289, mode: os.FileMode(438), modTime: time.Unix(1429059255, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlGetcollectionhistorySql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8f\x41\x4b\x03\x31\x14\x84\xcf\x06\xf2\x1f\xe6\x50\x10\xca\xda\xa2\x47\xa1\x87\xa2\x2b\x3d\x68\x85\x5a\xf1\xfc\x48\x9f\x36\x98\x4d\x6c\xde\x5b\xa4\xff\xde\x4d\x2c\xec\xde\x86\x64\x66\xbe\x37\xcb\xb9\x35\x6b\x77\xea\x7d\x66\x81\x1e\x19\x9a\x94\x02\x8e\x5e\x34\xe5\x33\xd2\x27\x08\xbd\x70\xbe\x16\xb8\x14\x02\x3b\xf5\x29\x2e\xac\xb1\x66\x4f\xdf\x2c\xf7\xd6\x5c\xa5\xdf\xc8\x19\x37\x10\xcd\x3e\x7e\x35\xd5\x3e\x54\x91\x62\xf8\x11\x78\x1d\x3c\x63\x76\x62\x9c\x3c\x0e\x9c\x9a\x28\x59\x6b\xe6\xcb\x02\x78\x6b\x9f\xdb\x87\x3d\x1c\xe5\xc3\x96\x3a\x6e\x20\xac\xff\xe2\xd4\x53\xf0\x7a\xae\x22\x6a\x55\x2e\x75\x1d\x47\x6d\x10\xa8\x54\x07\x12\x7d\xff\x39\x90\xb2\x35\x4f\xbb\xd7\x17\x6b\x4a\xb3\x2c\x46\xe4\xe6\xb2\xf0\x63\xd3\xee\x5a\xd4\x0d\xab\xd9\x2d\xd6\xdb\xc7\xc9\x5d\xab\xd9\xdd\x5f\x00\x00\x00\xff\xff\x79\xc1\x1c\x3d\x21\x01\x00\x00")

func sqlGetcollectionhistorySqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlGetcollectionhistorySql,
		"sql/getCollectionHistory.sql",
	)
}

func sqlGetcollectionhistorySql() (*asset, error) {
	bytes, err := sqlGetcollectionhistorySqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/getCollectionHistory.sql", size: 289, mode: os.FileMode(438), modTime: time.Unix(1429059247, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlGetcollectionlistSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\x4f\x8b\xc2\x30\x10\xc5\xcf\x3b\x30\xdf\x61\x0e\x7b\x2a\xdd\x2d\x7b\x5d\xf0\x20\x12\xf1\xa0\x08\xb5\xe0\x39\x84\xd1\x04\x6b\xa2\x99\x54\xf1\xdb\x9b\xd4\x43\x7b\x7d\xef\xf7\xfe\x34\x15\xc2\xd2\xdc\x07\x17\x59\x28\x59\x26\xaf\xaf\x4c\xe1\x44\xac\x8d\x25\x13\xfa\x9e\x4d\x72\xc1\x93\xa6\x41\x38\x92\xd5\x82\x80\xd0\xe9\x0b\xcb\x3f\xc2\x57\x78\xfa\xac\xfe\x90\xa4\xe8\xfc\xb9\xfe\x40\xc9\xea\x44\xd9\x11\x72\x29\x33\xb3\x96\x09\x9c\x89\x79\x6d\x4c\x94\x2c\x42\xd5\x94\x81\x83\xda\xaa\x55\x87\x50\xee\xd4\x74\x8b\xee\xa1\xcd\x0b\x61\xdd\xee\x77\x08\x05\x94\xdf\xa9\x41\xe8\xb8\x51\xad\xa2\xf1\xcc\xe2\xfb\xef\x1d\x00\x00\xff\xff\x68\xd5\xb8\xc7\xd5\x00\x00\x00")

func sqlGetcollectionlistSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlGetcollectionlistSql,
		"sql/getCollectionList.sql",
	)
}

func sqlGetcollectionlistSql() (*asset, error) {
	bytes, err := sqlGetcollectionlistSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/getCollectionList.sql", size: 213, mode: os.FileMode(438), modTime: time.Unix(1429212792, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlGetcollectionmetaSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\x4f\x4b\xc4\x40\x0c\xc5\xcf\x06\xf2\x1d\x72\x58\x10\x96\xba\x8b\x1e\x85\x3d\x2c\x3a\xe2\xc1\x3f\x50\x2b\x9e\xc3\x18\x75\xb0\x9d\xa9\x93\x54\xf1\xdb\x3b\x53\x0f\xed\xf5\xe5\xfd\xde\x2f\xfb\x2d\xc2\xd1\x7f\x4d\x21\x8b\x92\x7d\x08\x0d\x62\xfc\xca\xc6\x94\xde\x88\x69\x52\xc9\xa7\x4a\x3e\xf5\xbd\x78\x0b\x29\xee\x10\x10\x3a\xfe\x14\xbd\x44\x38\x49\x3f\x51\x32\x9d\x91\x5a\x0e\xf1\xbd\x99\xeb\x65\x85\x8d\xca\x45\x29\x58\xe9\x2c\xec\xaa\xb8\x0a\x8b\x67\x26\x2a\x8b\xb0\xdd\x57\xc1\x93\xbb\x73\x57\x1d\x42\xe4\x41\x1a\x9a\x2d\x0d\xf5\xac\xf6\x3c\x96\xdf\x4a\x34\xe6\xf0\xcd\xfe\x17\xe1\xa6\x7d\xbc\x47\xa8\xac\xee\x96\x51\xa5\x97\x5b\xd7\xba\x7f\xf2\xb0\x39\xa7\xe3\xc3\x35\xd5\xb1\xc3\xe6\xe2\x2f\x00\x00\xff\xff\xac\xf3\xba\xe2\xf2\x00\x00\x00")

func sqlGetcollectionmetaSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlGetcollectionmetaSql,
		"sql/getCollectionMeta.sql",
	)
}

func sqlGetcollectionmetaSql() (*asset, error) {
	bytes, err := sqlGetcollectionmetaSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/getCollectionMeta.sql", size: 242, mode: os.FileMode(438), modTime: time.Unix(1429212867, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlGetresetSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x90\x4f\x4b\x03\x31\x10\xc5\xcf\x06\xf2\x1d\xe6\xd0\x83\x96\x6d\x8b\x1e\x85\x0a\x45\x57\x04\xff\x41\x2d\xf6\x20\x1e\xa6\x9b\x69\x1b\x76\x37\xd1\x24\xbb\xcb\x7e\x7b\x27\x59\xdb\xea\x2d\x43\xde\xef\xbd\x37\x33\x1b\x4b\xb1\x28\xbe\x1b\xed\xc8\x43\xd8\x13\x50\x4b\xae\x07\x9e\x28\x40\x49\x3d\x6c\xad\x03\x84\x2f\x67\x5b\xad\x48\x41\xe3\xc9\xb1\x0e\x03\xd4\x18\x8a\x3d\x79\x29\x22\x75\xfc\x3f\x81\x68\x14\x68\x0f\x2d\x56\x5a\x4d\xa5\x90\x62\xc5\xba\x2d\x16\x61\xc0\x11\x9c\xed\xa2\xc0\x51\x68\x9c\x61\xb4\x26\x34\x7e\xf8\xfc\x67\xe9\xc9\x7b\x6d\xcd\x2c\x46\x4b\x51\xd8\x7a\x63\x4f\xc6\xb0\x26\xf0\x41\x57\x15\x70\x99\xa2\x04\x6d\x12\x5c\x6b\xa5\x2a\xea\xd0\x11\x8f\xb6\xd9\xed\x87\x06\x58\x92\xbf\x96\xe2\xcc\x60\x4d\x30\x61\xd0\x69\xb3\xcb\xfe\x2c\x65\x3b\xae\xa0\x03\x4b\x7e\x53\x1f\x79\x93\x09\x7c\x7c\x6e\xfa\x40\x19\x97\x4e\xa9\x87\x4a\x71\x4f\x29\xc6\xb3\xe8\xfd\x96\x3f\xe5\xb7\x2b\x88\xce\xd9\x70\x05\x46\x33\x8e\x40\x17\xde\x23\x94\x01\x19\x95\x5e\x52\xdc\x2f\x5f\x9f\x53\xaa\x9f\x26\x29\x5f\x71\xfd\x90\x2f\xf3\x84\xcf\x47\x97\xb0\x78\xb9\x3b\x9a\xcc\x47\x57\x69\x3e\xe0\x70\x03\xc6\x76\xe7\x17\x3f\x01\x00\x00\xff\xff\xc3\xa7\x47\xc9\xbb\x01\x00\x00")

func sqlGetresetSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlGetresetSql,
		"sql/getReset.sql",
	)
}

func sqlGetresetSql() (*asset, error) {
	bytes, err := sqlGetresetSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/getReset.sql", size: 443, mode: os.FileMode(438), modTime: time.Unix(1428964012, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlGetsessionsSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\x4f\x4b\xf3\x40\x10\xc6\xcf\xef\xc2\x7e\x87\xe7\xd0\xc3\x6b\x49\x5b\xf4\x28\x54\x28\x1a\x11\xfc\x07\xb5\xe8\x41\x3c\x4c\x93\xa9\x5d\x6a\x76\x75\x67\x93\x90\x6f\xef\x6e\x5a\x35\x88\xb7\x61\xe7\xf9\xfd\xe6\x61\x67\x63\xad\x16\xc5\x47\x6d\x3c\x0b\xc2\x96\xc1\x0d\xfb\x0e\xc2\x22\xc6\x59\xec\xb8\xc3\xc6\x79\x10\xde\xbd\x6b\x4c\xc9\x25\x6a\x61\x1f\x93\x14\x50\x51\x28\xb6\x2c\x5a\x25\xee\x7b\x3f\x44\xc9\x96\x30\x82\x86\xde\x4c\x39\xd5\x4a\xab\x55\x4c\x6e\xa8\x08\x7b\x01\xc1\xbb\x36\x05\x3c\x87\xda\xdb\x08\x57\x4c\x56\xf6\xcb\xbf\xa4\xb3\x74\x5c\xab\xc2\x55\x6b\xf7\x4b\x4c\x3b\x96\x53\xad\xfe\x59\xaa\x18\x13\x48\xf0\xc6\xbe\x66\x83\xb6\xae\x8d\x66\x13\x62\xe4\x20\xbb\x8e\x05\x27\x78\x7e\x59\x77\x81\xb3\xd8\xa5\x97\x0d\xeb\x6b\x35\x9e\x25\xf7\x43\x7e\x93\x9f\xaf\x90\xcc\x19\x7e\xe0\x38\x07\xf2\xe1\x31\x61\x19\xd8\x96\xfd\xa4\xd5\xe5\xf2\xfe\x56\xab\x74\x58\xa6\x87\x74\xfc\xa3\xa7\xab\x7c\x99\xf7\x8e\xf9\xe8\x18\x8b\xbb\x8b\x81\x69\x3e\x3a\xe9\x5f\xbe\x1c\x38\x83\x75\xed\xff\xa3\xcf\x00\x00\x00\xff\xff\x33\xa1\xf1\x1e\x9d\x01\x00\x00")

func sqlGetsessionsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlGetsessionsSql,
		"sql/getSessions.sql",
	)
}

func sqlGetsessionsSql() (*asset, error) {
	bytes, err := sqlGetsessionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/getSessions.sql", size: 413, mode: os.FileMode(438), modTime: time.Unix(1428963981, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlGetsubSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x1c\x8e\xc1\x4a\x43\x31\x10\x45\xd7\x06\xf2\x0f\x77\xe1\xaa\x44\x8b\x5b\xc1\x85\xd4\x88\x82\xa2\xb4\x0f\x5c\x4f\x1f\xa3\x1d\x34\x89\xce\x4c\xec\xef\xf7\xa5\xab\x81\xe1\x9c\xc3\x5d\xaf\x62\xb8\x9f\xff\xba\x28\x1b\x08\xd6\xf7\x36\xab\xfc\xba\xb4\x8a\x4f\x6d\x05\x7e\x60\x18\xeb\x3f\x2b\x8e\xe2\x07\xd4\x06\xea\xcb\xb3\xba\xcc\x34\xb0\x18\x62\x98\xe8\x9b\xed\x36\x86\x8b\x4a\x85\x71\x05\x73\x95\xfa\x95\xd0\x17\x73\x29\x90\xa3\x1d\xab\x41\x3c\x86\xd5\x7a\x08\xbb\xfc\x92\x37\x13\x06\x9e\xf0\xfe\x43\x35\x61\xd3\xcd\x5b\x61\x7d\x7e\x48\xd8\xf5\xfd\xf9\x38\xa9\x4f\x52\x38\x86\xc7\xed\xdb\x6b\x0c\xa3\x67\xd7\x63\x24\x3e\x9e\xf2\x36\x9f\x03\x77\x97\x37\xa7\x00\x00\x00\xff\xff\x60\x75\xd1\x8c\xc6\x00\x00\x00")

func sqlGetsubSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlGetsubSql,
		"sql/getSub.sql",
	)
}

func sqlGetsubSql() (*asset, error) {
	bytes, err := sqlGetsubSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/getSub.sql", size: 198, mode: os.FileMode(438), modTime: time.Unix(1431384383, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlGetuserSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x24\x8d\x31\x4b\x04\x31\x10\x46\x6b\x03\xf9\x0f\x5f\x61\x75\x44\x0f\x5b\xc1\x42\x64\xc5\x42\x11\xce\x03\xeb\x21\x8c\x97\xc1\xcd\x44\x77\x66\x6f\xfd\xf9\x26\x5a\x7e\x8f\x99\xf7\xf6\xbb\x18\xee\xf3\xf7\x2a\x0b\x1b\x08\xab\xf1\x82\x8f\xa5\x55\x78\x61\xf4\x71\xee\x7b\x13\x2f\xd0\x06\x5a\x3b\x54\x97\x4c\x2e\x4d\x63\x88\xe1\x48\x9f\x6c\xb7\x31\x5c\x28\x55\xc6\x15\xcc\x17\xd1\x53\xfa\xd7\x78\x21\x47\xdb\xd4\x20\x1e\xc3\x6e\x3f\x1e\xde\xa6\xe7\xe9\xe1\x88\x71\x9e\xc0\x95\x64\x4e\xf8\x22\xb3\x42\x56\x52\x6f\x68\xee\xbc\xd2\x4f\x6e\xf3\xcc\x79\x64\x2c\x61\x6e\x7a\x62\xf3\xb3\xf0\x16\xc3\xe3\xe1\xf5\x25\x86\x11\xb0\xeb\xca\x4e\x78\x7f\x9a\x0e\xd3\x9f\xf1\xee\xf2\xe6\x37\x00\x00\xff\xff\xd6\xc1\x75\xc2\xcf\x00\x00\x00")

func sqlGetuserSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlGetuserSql,
		"sql/getUser.sql",
	)
}

func sqlGetuserSql() (*asset, error) {
	bytes, err := sqlGetuserSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/getUser.sql", size: 207, mode: os.FileMode(438), modTime: time.Unix(1431477671, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlModsubSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x51\x41\x6f\xea\x30\x0c\x3e\x3f\x24\xfe\x83\x0f\x48\x05\xd4\x07\x7a\x6f\xdb\x65\x1c\x19\x87\x49\x3b\x4c\x6b\x77\x9b\x34\xa5\xc4\x94\x88\x34\xae\x6a\x07\xc4\xbf\x9f\x13\x40\x9a\x34\xed\x90\xc6\x76\xbe\xef\xb3\xfd\x75\x39\x1f\x8f\xc6\xa3\xf7\xd7\x6a\xf3\x56\x33\xb8\x20\x04\x91\x71\xe0\x05\xc7\x86\x35\x74\xa1\x05\xd9\x23\x74\x64\x3f\xb5\x04\xbb\x18\xb6\xe2\x28\x2c\x12\x6d\x4d\xd1\x5b\xe8\x49\x30\x88\x33\xde\x9f\xc1\x13\xf5\xb0\xa3\x01\x8f\x38\x40\x13\x05\x5a\x22\xab\x1f\x0b\x96\x90\x15\xca\xd2\x0e\x1a\x04\x44\xab\xba\x4e\x23\x23\xee\x88\xfe\x9c\x05\x6f\x5d\xf6\x86\x73\x57\x55\xea\x8c\x8c\x47\x7f\xae\x0f\xd3\x22\x09\x7b\xd3\x16\x25\x14\x15\x06\x46\xf7\x51\x30\xd4\xd4\x6b\x21\xd0\xa9\x54\x68\xc1\xd4\xe1\x3a\xb2\xe8\x35\xd4\x74\xc0\x90\xc0\xa9\x58\xc5\xe6\x92\xcf\x56\xa9\x59\x6d\x0e\xc8\x8f\xca\x08\xa6\x43\xf8\x0b\x2c\x83\x6e\x5b\xe6\xfd\xb5\xbb\x11\xa0\x53\x50\x4f\x52\xff\xde\x9b\xa0\x10\x9d\x9f\x5d\xe3\x93\x52\x99\x07\xcc\xf5\xcc\x4f\x59\x66\x5a\x64\xa7\x2b\x2a\x49\x5c\xd6\x4d\x17\x8b\xe9\xfa\x0b\xc5\x1b\xd1\x14\xb6\x7b\x13\x5a\x54\xd4\xf6\x3a\xea\xf3\xd3\xb7\x19\x12\xf0\xf6\xa0\x23\x58\x50\x43\xfa\x81\x8e\xce\xaa\x6f\xcd\x39\xe3\xfa\xc4\x56\x53\x7e\x10\x93\x83\xbf\x53\xe6\xcb\xb4\x7c\xb5\x79\xd9\xac\xeb\xdb\x6f\x9d\x4e\xfe\x95\x30\xf9\xaf\xe7\x4e\xcf\xbd\x9e\x87\xd9\xea\x2b\x00\x00\xff\xff\x23\x93\xa7\xaf\x1b\x02\x00\x00")

func sqlModsubSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlModsubSql,
		"sql/modSub.sql",
	)
}

func sqlModsubSql() (*asset, error) {
	bytes, err := sqlModsubSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/modSub.sql", size: 539, mode: os.FileMode(438), modTime: time.Unix(1431382801, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlRemovesessionSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\xcd\x4d\x8b\x83\x30\x10\xc6\xf1\xf3\x06\xf2\x1d\x9e\x83\x27\x71\x57\x76\x8f\x0b\x1e\x16\xcc\x52\xe8\x1b\x88\xd0\x43\xe9\x21\xc5\x69\x1b\xac\x49\xc9\xa4\x16\xbf\x7d\xa3\x08\x5e\x67\xfe\xfc\x9e\x3c\x95\xa2\xa2\xce\xf5\xc4\xd0\x78\x78\xd7\x9b\x86\x1a\x30\x31\x1b\x67\x71\x71\x3e\x9e\x9f\x4c\x5e\x0a\x29\x6a\xdd\x12\xff\x4a\xf1\x61\x75\x47\xf8\x04\x07\x6f\xec\x35\x9b\xfe\x08\x37\x1d\xe0\x5e\x96\x61\x42\x4c\x66\x61\x4d\x43\x0c\x8f\xa7\xf3\x10\x28\x8b\x54\xaf\xef\x66\xe1\x5b\x1a\xa4\x48\xf3\xd1\x2e\xd5\x46\xd5\x0a\xff\xd5\x7e\x3b\x79\xfc\x35\x47\x8c\xc3\x4a\x55\x0a\xe3\x66\x91\x7c\xe3\x6f\x57\x62\xc1\x8b\xe4\xe7\x1d\x00\x00\xff\xff\xc3\xcb\x8c\x89\xc3\x00\x00\x00")

func sqlRemovesessionSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlRemovesessionSql,
		"sql/removeSession.sql",
	)
}

func sqlRemovesessionSql() (*asset, error) {
	bytes, err := sqlRemovesessionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/removeSession.sql", size: 195, mode: os.FileMode(438), modTime: time.Unix(1429029700, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlSetcollectionpermissionsSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\x41\x4b\x03\x41\x0c\x85\xcf\x0e\xcc\x7f\x78\x87\x3d\x15\xb5\xa8\x37\x61\x0f\x85\x2e\x78\x92\xa2\x5b\x3d\xa7\xdb\x60\x83\xdb\x99\x65\x92\x6e\xf1\xdf\x9b\x51\xc1\x42\xc8\x21\xef\x7b\x2f\x6f\xb9\x88\x61\x3b\xed\xc9\x58\x41\x18\xf2\x38\xf2\x60\x92\x13\x7c\xec\xc0\x70\x85\x76\xa4\x0c\xcb\x38\xd0\xcc\xbf\x47\x56\x29\xbc\xc7\xc4\xe5\x28\xaa\x8e\x6b\x0c\x31\xf4\xf4\xc9\xfa\x18\xc3\x55\xa2\x23\xe3\x06\x6a\x45\xd2\xc7\x35\x4e\xca\xc5\x7d\x64\xc8\xe7\xa4\x10\x73\x64\x3a\xed\x46\x19\xde\x84\xcf\x8e\x5c\xb0\x84\x99\x46\xf1\xe8\x22\x33\x0d\x5f\x50\x36\x73\xa1\xc6\x2f\x96\x75\x6f\x37\xeb\x55\xdf\xfd\x64\xea\xed\x7f\x5f\x2f\xf0\xda\xf5\xd8\xfc\xd9\x5a\x34\x0f\x31\xbc\x3f\x75\x2f\x5d\x7d\xca\xa5\x6d\xee\xb0\x7a\x5e\xa3\x56\x6b\x9b\xfb\xef\x00\x00\x00\xff\xff\xcb\xb3\x51\x19\xf7\x00\x00\x00")

func sqlSetcollectionpermissionsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlSetcollectionpermissionsSql,
		"sql/setCollectionPermissions.sql",
	)
}

func sqlSetcollectionpermissionsSql() (*asset, error) {
	bytes, err := sqlSetcollectionpermissionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/setCollectionPermissions.sql", size: 247, mode: os.FileMode(438), modTime: time.Unix(1429074766, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlSetmaxcollectionsSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8e\x41\x6b\x83\x40\x10\x85\xcf\x5d\xd8\xff\x30\x07\xa1\x20\x5a\xa9\xbd\x15\x3c\x94\x76\xa1\xc7\x90\x28\x39\x4f\x74\x88\x4b\xdc\x5d\x71\x26\x31\x3f\x3f\xeb\x9e\x42\xae\xf3\xbd\xf7\xbd\xa9\x72\xad\xba\x79\x40\x21\x06\x84\x2b\xd3\xf2\xce\x30\x23\xf3\x1a\x96\x01\x82\x07\x19\x09\x22\xc6\x13\x32\x69\xa5\x55\x8b\x17\xe2\x6f\xad\xde\x3c\x3a\x82\x12\x58\x16\xeb\xcf\x45\xaa\xc6\x30\x0a\x84\xd5\x33\x58\x89\x11\x87\xf7\xdf\x30\x4d\xd4\x8b\x0d\xf1\x56\x82\xf5\xf2\x55\x17\xc9\xe9\x02\x0b\xf4\x4f\x34\x75\x93\xa5\x47\x0f\x23\xde\xe2\x5c\x5e\x6d\x93\xdd\xee\xef\xa7\x35\x89\xf1\x87\x23\x41\xad\x0e\xa6\x85\x17\x7b\x03\x59\xad\xd5\xf1\xdf\xec\x8d\x56\xdb\x73\x4d\xf6\xf9\x08\x00\x00\xff\xff\x18\xde\x0b\x19\xde\x00\x00\x00")

func sqlSetmaxcollectionsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlSetmaxcollectionsSql,
		"sql/setMaxCollections.sql",
	)
}

func sqlSetmaxcollectionsSql() (*asset, error) {
	bytes, err := sqlSetmaxcollectionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/setMaxCollections.sql", size: 222, mode: os.FileMode(438), modTime: time.Unix(1429033740, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlSetpasswordSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\x41\x4b\xc3\x40\x10\x85\xcf\x0e\xcc\x7f\x78\x87\x80\x5a\xa2\x45\xbd\x09\x39\x08\x06\x7a\x14\x4d\xf1\x3c\x6d\xa6\x36\x68\x77\xc3\xce\xd4\xd2\x7f\xef\x6e\xb4\x42\x6f\xcb\xee\xf7\xde\xf7\x76\x3e\x63\x5a\x8e\xbd\xb8\x1a\x04\x7b\xd3\x74\x69\x18\xc5\xec\x10\x53\x8f\x18\xe0\x5b\x45\x7e\x96\x95\x98\x32\x31\x75\xf2\xa9\xf6\xc8\x74\x11\x64\xa7\xb8\x81\x79\x1a\xc2\x47\x3d\x45\x33\x2c\x8e\x78\x08\x86\xc1\x33\x52\x7a\x16\x62\xdb\x8c\xad\x8e\xae\x52\x4f\x6d\x49\x6d\xff\x95\xb1\x0d\x6c\x9d\x8e\xa3\x5f\x9d\x74\x35\x42\x0c\x6b\xbd\x2e\xe5\xe5\x70\x1e\xfb\xbd\xca\x9a\x1e\x9b\x98\xd0\x6b\x1a\xbe\xb3\x19\x27\x09\xd3\x6c\x5e\x06\x2e\x5f\x9e\x9f\xba\x76\xda\x63\xb7\x3b\x75\x61\x7a\x6b\xbb\x7f\x0c\x0d\xaa\xfb\x3f\x53\x53\x3d\x30\xbd\x2f\xda\xd7\x96\xa9\x7c\xa7\xa9\xee\x7e\x02\x00\x00\xff\xff\xa7\x37\x03\x88\x10\x01\x00\x00")

func sqlSetpasswordSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlSetpasswordSql,
		"sql/setPassword.sql",
	)
}

func sqlSetpasswordSql() (*asset, error) {
	bytes, err := sqlSetpasswordSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/setPassword.sql", size: 272, mode: os.FileMode(438), modTime: time.Unix(1429031540, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _sqlSetsubeffectsSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x31\x6b\xc3\x30\x10\x85\xe7\x0a\xf4\x1f\x6e\xc8\x14\xdc\x84\xb6\x5b\x21\x43\xa1\x86\x8e\xa5\x75\xe8\x7c\x56\xce\xb1\x88\x25\x19\xdd\x39\x6e\xfe\x7d\x25\x99\x82\xc9\x22\xd0\xbb\xf7\xbe\x7b\xb7\xdf\x6a\x75\x1c\x4f\x28\xc4\x80\x30\x31\x45\x08\x1e\xa4\x27\x48\x1a\xb6\xc8\x04\x12\xa0\xc7\x2b\x2d\x22\xb1\x8d\x74\x02\x9e\x5a\x36\xd1\x8e\x62\x93\xbb\x43\x43\xc2\x5a\x69\xd5\xe0\x85\xf8\x55\xab\x07\x8f\x8e\xe0\x11\x58\xa2\xf5\xe7\x6a\xe1\x4a\x8f\x02\x61\xf6\x0c\x56\x92\xc5\xe1\xaf\x09\xc3\x40\x26\x33\x38\x99\xad\x97\x0a\xfa\x30\x83\x43\x7f\x83\xf5\xac\x24\x0b\xc3\xe1\xad\x94\x49\xf9\x21\xf8\x33\xb1\x5c\x2d\xcd\x29\x2c\xd6\xa5\x0f\xba\x71\x41\x74\x18\xa1\x45\x73\xc9\xd0\x50\x9a\x77\x93\x4c\x91\xfe\x6f\xcc\x9c\x9c\xdc\xe5\xd6\xdb\x7d\x7e\x8f\x9f\xef\x6f\x4d\x5d\xc6\xbc\x73\x24\xa8\xd5\x77\xdd\xc0\x5d\xcd\x03\x6c\x9e\x2b\x58\xef\x4e\xca\x8b\x56\x3f\x1f\xf5\x57\x0d\xf9\xec\xc3\xe6\xe9\x2f\x00\x00\xff\xff\x34\x1a\xb3\xd5\x55\x01\x00\x00")

func sqlSetsubeffectsSqlBytes() ([]byte, error) {
	return bindataRead(
		_sqlSetsubeffectsSql,
		"sql/setSubEffects.sql",
	)
}

func sqlSetsubeffectsSql() (*asset, error) {
	bytes, err := sqlSetsubeffectsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sql/setSubEffects.sql", size: 341, mode: os.FileMode(438), modTime: time.Unix(1431473969, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"sql/addCard.sql": sqlAddcardSql,
	"sql/addCardHistorical.sql": sqlAddcardhistoricalSql,
	"sql/addCollection.sql": sqlAddcollectionSql,
	"sql/addReset.sql": sqlAddresetSql,
	"sql/addSession.sql": sqlAddsessionSql,
	"sql/addUser.sql": sqlAdduserSql,
	"sql/getAllResets.sql": sqlGetallresetsSql,
	"sql/getCard.sql": sqlGetcardSql,
	"sql/getCollectionContents.sql": sqlGetcollectioncontentsSql,
	"sql/getCollectionHistory.sql": sqlGetcollectionhistorySql,
	"sql/getCollectionList.sql": sqlGetcollectionlistSql,
	"sql/getCollectionMeta.sql": sqlGetcollectionmetaSql,
	"sql/getReset.sql": sqlGetresetSql,
	"sql/getSessions.sql": sqlGetsessionsSql,
	"sql/getSub.sql": sqlGetsubSql,
	"sql/getUser.sql": sqlGetuserSql,
	"sql/modSub.sql": sqlModsubSql,
	"sql/removeSession.sql": sqlRemovesessionSql,
	"sql/setCollectionPermissions.sql": sqlSetcollectionpermissionsSql,
	"sql/setMaxCollections.sql": sqlSetmaxcollectionsSql,
	"sql/setPassword.sql": sqlSetpasswordSql,
	"sql/setSubEffects.sql": sqlSetsubeffectsSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"sql": &bintree{nil, map[string]*bintree{
		"addCard.sql": &bintree{sqlAddcardSql, map[string]*bintree{
		}},
		"addCardHistorical.sql": &bintree{sqlAddcardhistoricalSql, map[string]*bintree{
		}},
		"addCollection.sql": &bintree{sqlAddcollectionSql, map[string]*bintree{
		}},
		"addReset.sql": &bintree{sqlAddresetSql, map[string]*bintree{
		}},
		"addSession.sql": &bintree{sqlAddsessionSql, map[string]*bintree{
		}},
		"addUser.sql": &bintree{sqlAdduserSql, map[string]*bintree{
		}},
		"getAllResets.sql": &bintree{sqlGetallresetsSql, map[string]*bintree{
		}},
		"getCard.sql": &bintree{sqlGetcardSql, map[string]*bintree{
		}},
		"getCollectionContents.sql": &bintree{sqlGetcollectioncontentsSql, map[string]*bintree{
		}},
		"getCollectionHistory.sql": &bintree{sqlGetcollectionhistorySql, map[string]*bintree{
		}},
		"getCollectionList.sql": &bintree{sqlGetcollectionlistSql, map[string]*bintree{
		}},
		"getCollectionMeta.sql": &bintree{sqlGetcollectionmetaSql, map[string]*bintree{
		}},
		"getReset.sql": &bintree{sqlGetresetSql, map[string]*bintree{
		}},
		"getSessions.sql": &bintree{sqlGetsessionsSql, map[string]*bintree{
		}},
		"getSub.sql": &bintree{sqlGetsubSql, map[string]*bintree{
		}},
		"getUser.sql": &bintree{sqlGetuserSql, map[string]*bintree{
		}},
		"modSub.sql": &bintree{sqlModsubSql, map[string]*bintree{
		}},
		"removeSession.sql": &bintree{sqlRemovesessionSql, map[string]*bintree{
		}},
		"setCollectionPermissions.sql": &bintree{sqlSetcollectionpermissionsSql, map[string]*bintree{
		}},
		"setMaxCollections.sql": &bintree{sqlSetmaxcollectionsSql, map[string]*bintree{
		}},
		"setPassword.sql": &bintree{sqlSetpasswordSql, map[string]*bintree{
		}},
		"setSubEffects.sql": &bintree{sqlSetsubeffectsSql, map[string]*bintree{
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, path.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

